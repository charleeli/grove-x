#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from couponAdmin import CouponAdminService
from couponAdmin.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  UpdateDefaultConfigRsp updateDefaultConfig(UpdateDefaultConfigReq updateDefaultConfigReq)')
  print('  ViewDefaultConfigRsp viewDefaultConfig(ViewDefaultConfigReq viewDefaultConfigReq)')
  print('  CreateWareLabelRsp createWareLabel(CreateWareLabelReq createWareLabelReq)')
  print('  UpdateWareLabelRsp updateWareLabel(UpdateWareLabelReq updateWareLabelReq)')
  print('  AddWareLabelWaresRsp addWareLabelWares(AddWareLabelWaresReq addWareLabelWaresReq)')
  print('  DelWareLabelWaresRsp delWareLabelWares(DelWareLabelWaresReq delWareLabelWaresReq)')
  print('  CreateCouponGroupRsp createCouponGroup(CreateCouponGroupReq createCouponGroupReq)')
  print('  UpdateCouponGroupRsp updateCouponGroup(UpdateCouponGroupReq updateCouponGroupReq)')
  print('  CreateCouponTableRsp createCouponTable(CreateCouponTableReq createCouponTableReq)')
  print('  CouponCountRsp getCouponCount(CouponCountReq couponCountReq)')
  print('  CouponListRsp getCouponList(CouponListReq couponListReq)')
  print('  CouponGroupCountRsp getCouponGroupCount(CouponGroupCountReq couponGroupCountReq)')
  print('  CouponGroupListRsp getCouponGroupList(CouponGroupListReq couponGroupListReq)')
  print('  WareLabelCountRsp getWareLabelCount(WareLabelCountReq wareLabelCountReq)')
  print('  WareLabelListRsp getWareLabelList(WareLabelListReq wareLabelListReq)')
  print('  WareLabelWaresCountRsp getWareLabelWaresCount(WareLabelWaresCountReq wareLabelWaresCountReq)')
  print('  WareLabelWaresListRsp getWareLabelWaresList(WareLabelWaresListReq wareLabelWaresListReq)')
  print('  BatchUserCouponRsp batchUserCoupon(BatchUserCouponReq batchUserCouponReq)')
  print('  VerifyArgotRsp verifyArgot(VerifyArgotReq verifyArgotReq)')
  print('  BatchDispatchRsp batchDispatch(BatchDispatchReq batchDispatchReq)')
  print('  BatchExportRsp batchExport(BatchExportReq batchExportReq)')
  print('  BatchExportCodeRsp batchExportCode(BatchExportCodeReq batchExportCodeReq)')
  print('  UpdateJumpRsp updateJump(UpdateJumpReq updateJumpReq)')
  print('  UpdateArgotJumpRsp updateArgotJump(UpdateArgotJumpReq updateArgotJumpReq)')
  print('  UpdateOnlineRsp updateOnline(UpdateOnlineReq updateOnlineReq)')
  print('  OfflineRsp offline(OfflineReq offlineReq)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = CouponAdminService.Client(protocol)
transport.open()

if cmd == 'updateDefaultConfig':
  if len(args) != 1:
    print('updateDefaultConfig requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateDefaultConfig(eval(args[0]),))

elif cmd == 'viewDefaultConfig':
  if len(args) != 1:
    print('viewDefaultConfig requires 1 args')
    sys.exit(1)
  pp.pprint(client.viewDefaultConfig(eval(args[0]),))

elif cmd == 'createWareLabel':
  if len(args) != 1:
    print('createWareLabel requires 1 args')
    sys.exit(1)
  pp.pprint(client.createWareLabel(eval(args[0]),))

elif cmd == 'updateWareLabel':
  if len(args) != 1:
    print('updateWareLabel requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateWareLabel(eval(args[0]),))

elif cmd == 'addWareLabelWares':
  if len(args) != 1:
    print('addWareLabelWares requires 1 args')
    sys.exit(1)
  pp.pprint(client.addWareLabelWares(eval(args[0]),))

elif cmd == 'delWareLabelWares':
  if len(args) != 1:
    print('delWareLabelWares requires 1 args')
    sys.exit(1)
  pp.pprint(client.delWareLabelWares(eval(args[0]),))

elif cmd == 'createCouponGroup':
  if len(args) != 1:
    print('createCouponGroup requires 1 args')
    sys.exit(1)
  pp.pprint(client.createCouponGroup(eval(args[0]),))

elif cmd == 'updateCouponGroup':
  if len(args) != 1:
    print('updateCouponGroup requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateCouponGroup(eval(args[0]),))

elif cmd == 'createCouponTable':
  if len(args) != 1:
    print('createCouponTable requires 1 args')
    sys.exit(1)
  pp.pprint(client.createCouponTable(eval(args[0]),))

elif cmd == 'getCouponCount':
  if len(args) != 1:
    print('getCouponCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getCouponCount(eval(args[0]),))

elif cmd == 'getCouponList':
  if len(args) != 1:
    print('getCouponList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getCouponList(eval(args[0]),))

elif cmd == 'getCouponGroupCount':
  if len(args) != 1:
    print('getCouponGroupCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getCouponGroupCount(eval(args[0]),))

elif cmd == 'getCouponGroupList':
  if len(args) != 1:
    print('getCouponGroupList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getCouponGroupList(eval(args[0]),))

elif cmd == 'getWareLabelCount':
  if len(args) != 1:
    print('getWareLabelCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelCount(eval(args[0]),))

elif cmd == 'getWareLabelList':
  if len(args) != 1:
    print('getWareLabelList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelList(eval(args[0]),))

elif cmd == 'getWareLabelWaresCount':
  if len(args) != 1:
    print('getWareLabelWaresCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelWaresCount(eval(args[0]),))

elif cmd == 'getWareLabelWaresList':
  if len(args) != 1:
    print('getWareLabelWaresList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelWaresList(eval(args[0]),))

elif cmd == 'batchUserCoupon':
  if len(args) != 1:
    print('batchUserCoupon requires 1 args')
    sys.exit(1)
  pp.pprint(client.batchUserCoupon(eval(args[0]),))

elif cmd == 'verifyArgot':
  if len(args) != 1:
    print('verifyArgot requires 1 args')
    sys.exit(1)
  pp.pprint(client.verifyArgot(eval(args[0]),))

elif cmd == 'batchDispatch':
  if len(args) != 1:
    print('batchDispatch requires 1 args')
    sys.exit(1)
  pp.pprint(client.batchDispatch(eval(args[0]),))

elif cmd == 'batchExport':
  if len(args) != 1:
    print('batchExport requires 1 args')
    sys.exit(1)
  pp.pprint(client.batchExport(eval(args[0]),))

elif cmd == 'batchExportCode':
  if len(args) != 1:
    print('batchExportCode requires 1 args')
    sys.exit(1)
  pp.pprint(client.batchExportCode(eval(args[0]),))

elif cmd == 'updateJump':
  if len(args) != 1:
    print('updateJump requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateJump(eval(args[0]),))

elif cmd == 'updateArgotJump':
  if len(args) != 1:
    print('updateArgotJump requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateArgotJump(eval(args[0]),))

elif cmd == 'updateOnline':
  if len(args) != 1:
    print('updateOnline requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateOnline(eval(args[0]),))

elif cmd == 'offline':
  if len(args) != 1:
    print('offline requires 1 args')
    sys.exit(1)
  pp.pprint(client.offline(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
