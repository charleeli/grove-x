// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "CouponAdminService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::couponAdmin;

class CouponAdminServiceHandler : virtual public CouponAdminServiceIf {
 public:
  CouponAdminServiceHandler() {
    // Your initialization goes here
  }

  void updateDefaultConfig(UpdateDefaultConfigRsp& _return, const UpdateDefaultConfigReq& updateDefaultConfigReq) {
    // Your implementation goes here
    printf("updateDefaultConfig\n");
  }

  void viewDefaultConfig(ViewDefaultConfigRsp& _return, const ViewDefaultConfigReq& viewDefaultConfigReq) {
    // Your implementation goes here
    printf("viewDefaultConfig\n");
  }

  void createWareLabel(CreateWareLabelRsp& _return, const CreateWareLabelReq& createWareLabelReq) {
    // Your implementation goes here
    printf("createWareLabel\n");
  }

  void updateWareLabel(UpdateWareLabelRsp& _return, const UpdateWareLabelReq& updateWareLabelReq) {
    // Your implementation goes here
    printf("updateWareLabel\n");
  }

  void addWareLabelWares(AddWareLabelWaresRsp& _return, const AddWareLabelWaresReq& addWareLabelWaresReq) {
    // Your implementation goes here
    printf("addWareLabelWares\n");
  }

  void delWareLabelWares(DelWareLabelWaresRsp& _return, const DelWareLabelWaresReq& delWareLabelWaresReq) {
    // Your implementation goes here
    printf("delWareLabelWares\n");
  }

  void createCouponGroup(CreateCouponGroupRsp& _return, const CreateCouponGroupReq& createCouponGroupReq) {
    // Your implementation goes here
    printf("createCouponGroup\n");
  }

  void updateCouponGroup(UpdateCouponGroupRsp& _return, const UpdateCouponGroupReq& updateCouponGroupReq) {
    // Your implementation goes here
    printf("updateCouponGroup\n");
  }

  void createCouponTable(CreateCouponTableRsp& _return, const CreateCouponTableReq& createCouponTableReq) {
    // Your implementation goes here
    printf("createCouponTable\n");
  }

  void getCouponCount(CouponCountRsp& _return, const CouponCountReq& couponCountReq) {
    // Your implementation goes here
    printf("getCouponCount\n");
  }

  void getCouponList(CouponListRsp& _return, const CouponListReq& couponListReq) {
    // Your implementation goes here
    printf("getCouponList\n");
  }

  void getCouponGroupCount(CouponGroupCountRsp& _return, const CouponGroupCountReq& couponGroupCountReq) {
    // Your implementation goes here
    printf("getCouponGroupCount\n");
  }

  void getCouponGroupList(CouponGroupListRsp& _return, const CouponGroupListReq& couponGroupListReq) {
    // Your implementation goes here
    printf("getCouponGroupList\n");
  }

  void getWareLabelCount(WareLabelCountRsp& _return, const WareLabelCountReq& wareLabelCountReq) {
    // Your implementation goes here
    printf("getWareLabelCount\n");
  }

  void getWareLabelList(WareLabelListRsp& _return, const WareLabelListReq& wareLabelListReq) {
    // Your implementation goes here
    printf("getWareLabelList\n");
  }

  void getWareLabelWaresCount(WareLabelWaresCountRsp& _return, const WareLabelWaresCountReq& wareLabelWaresCountReq) {
    // Your implementation goes here
    printf("getWareLabelWaresCount\n");
  }

  void getWareLabelWaresList(WareLabelWaresListRsp& _return, const WareLabelWaresListReq& wareLabelWaresListReq) {
    // Your implementation goes here
    printf("getWareLabelWaresList\n");
  }

  void batchUserCoupon(BatchUserCouponRsp& _return, const BatchUserCouponReq& batchUserCouponReq) {
    // Your implementation goes here
    printf("batchUserCoupon\n");
  }

  void verifyArgot(VerifyArgotRsp& _return, const VerifyArgotReq& verifyArgotReq) {
    // Your implementation goes here
    printf("verifyArgot\n");
  }

  void batchDispatch(BatchDispatchRsp& _return, const BatchDispatchReq& batchDispatchReq) {
    // Your implementation goes here
    printf("batchDispatch\n");
  }

  void batchExport(BatchExportRsp& _return, const BatchExportReq& batchExportReq) {
    // Your implementation goes here
    printf("batchExport\n");
  }

  void batchExportCode(BatchExportCodeRsp& _return, const BatchExportCodeReq& batchExportCodeReq) {
    // Your implementation goes here
    printf("batchExportCode\n");
  }

  void updateJump(UpdateJumpRsp& _return, const UpdateJumpReq& updateJumpReq) {
    // Your implementation goes here
    printf("updateJump\n");
  }

  void updateArgotJump(UpdateArgotJumpRsp& _return, const UpdateArgotJumpReq& updateArgotJumpReq) {
    // Your implementation goes here
    printf("updateArgotJump\n");
  }

  void updateOnline(UpdateOnlineRsp& _return, const UpdateOnlineReq& updateOnlineReq) {
    // Your implementation goes here
    printf("updateOnline\n");
  }

  void offline(OfflineRsp& _return, const OfflineReq& offlineReq) {
    // Your implementation goes here
    printf("offline\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<CouponAdminServiceHandler> handler(new CouponAdminServiceHandler());
  shared_ptr<TProcessor> processor(new CouponAdminServiceProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

