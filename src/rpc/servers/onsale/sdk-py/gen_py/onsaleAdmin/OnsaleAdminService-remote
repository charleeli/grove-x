#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from onsaleAdmin import OnsaleAdminService
from onsaleAdmin.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  AddCacheNameListRsp addCacheNameList(AddCacheNameListReq addCacheNameListReq)')
  print('  DelCacheNameListRsp delCacheNameList(DelCacheNameListReq delCacheNameListReq)')
  print('  GetCacheNameListRsp getCacheNameList(GetCacheNameListReq getCacheNameListReq)')
  print('  CheckCacheNameListRsp checkCacheNameList(CheckCacheNameListReq checkCacheNameListReq)')
  print('  ViewCheckCacheNameListRsp viewCheckCacheNameList(ViewCheckCacheNameListReq viewCheckCacheNameListReq)')
  print('  LatestTimestampRsp getLatestTimestamp(LatestTimestampReq latestTimestampReq)')
  print('  CreateNameListRsp createNameList(CreateNameListReq createNameListReq)')
  print('  CreateWareLabelRsp createWareLabel(CreateWareLabelReq createWareLabelReq)')
  print('  UpdateWareLabelRsp updateWareLabel(UpdateWareLabelReq updateWareLabelReq)')
  print('  WareLabelCountRsp getWareLabelCount(WareLabelCountReq wareLabelCountReq)')
  print('  WareLabelListRsp getWareLabelList(WareLabelListReq wareLabelListReq)')
  print('  AddWareLabelWaresRsp addWareLabelWares(AddWareLabelWaresReq addWareLabelWaresReq)')
  print('  DelWareLabelWaresRsp delWareLabelWares(DelWareLabelWaresReq delWareLabelWaresReq)')
  print('  WareLabelWaresCountRsp getWareLabelWaresCount(WareLabelWaresCountReq wareLabelWaresCountReq)')
  print('  WareLabelWaresListRsp getWareLabelWaresList(WareLabelWaresListReq wareLabelWaresListReq)')
  print('  AddPresentRsp addPresent(AddPresentReq addPresentReq)')
  print('  DelPresentRsp delPresent(DelPresentReq delPresentReq)')
  print('  PresentListRsp getPresentList(PresentListReq presentListReq)')
  print('  AddStepRsp addStep(AddStepReq addStepReq)')
  print('  DelStepRsp delStep(DelStepReq delStepReq)')
  print('  StepListRsp getStepList(StepListReq stepListReq)')
  print('  CreateOnsaleGroupRsp createOnsaleGroup(CreateOnsaleGroupReq createOnsaleGroupReq)')
  print('  UpdateOnsaleGroupRsp updateOnsaleGroup(UpdateOnsaleGroupReq updateOnsaleGroupReq)')
  print('  OnsaleGroupCountRsp getOnsaleGroupCount(OnsaleGroupCountReq onsaleGroupCountReq)')
  print('  OnsaleGroupListRsp getOnsaleGroupList(OnsaleGroupListReq onsaleGroupListReq)')
  print('  OfflineRsp offline(OfflineReq offlineReq)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = OnsaleAdminService.Client(protocol)
transport.open()

if cmd == 'addCacheNameList':
  if len(args) != 1:
    print('addCacheNameList requires 1 args')
    sys.exit(1)
  pp.pprint(client.addCacheNameList(eval(args[0]),))

elif cmd == 'delCacheNameList':
  if len(args) != 1:
    print('delCacheNameList requires 1 args')
    sys.exit(1)
  pp.pprint(client.delCacheNameList(eval(args[0]),))

elif cmd == 'getCacheNameList':
  if len(args) != 1:
    print('getCacheNameList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getCacheNameList(eval(args[0]),))

elif cmd == 'checkCacheNameList':
  if len(args) != 1:
    print('checkCacheNameList requires 1 args')
    sys.exit(1)
  pp.pprint(client.checkCacheNameList(eval(args[0]),))

elif cmd == 'viewCheckCacheNameList':
  if len(args) != 1:
    print('viewCheckCacheNameList requires 1 args')
    sys.exit(1)
  pp.pprint(client.viewCheckCacheNameList(eval(args[0]),))

elif cmd == 'getLatestTimestamp':
  if len(args) != 1:
    print('getLatestTimestamp requires 1 args')
    sys.exit(1)
  pp.pprint(client.getLatestTimestamp(eval(args[0]),))

elif cmd == 'createNameList':
  if len(args) != 1:
    print('createNameList requires 1 args')
    sys.exit(1)
  pp.pprint(client.createNameList(eval(args[0]),))

elif cmd == 'createWareLabel':
  if len(args) != 1:
    print('createWareLabel requires 1 args')
    sys.exit(1)
  pp.pprint(client.createWareLabel(eval(args[0]),))

elif cmd == 'updateWareLabel':
  if len(args) != 1:
    print('updateWareLabel requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateWareLabel(eval(args[0]),))

elif cmd == 'getWareLabelCount':
  if len(args) != 1:
    print('getWareLabelCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelCount(eval(args[0]),))

elif cmd == 'getWareLabelList':
  if len(args) != 1:
    print('getWareLabelList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelList(eval(args[0]),))

elif cmd == 'addWareLabelWares':
  if len(args) != 1:
    print('addWareLabelWares requires 1 args')
    sys.exit(1)
  pp.pprint(client.addWareLabelWares(eval(args[0]),))

elif cmd == 'delWareLabelWares':
  if len(args) != 1:
    print('delWareLabelWares requires 1 args')
    sys.exit(1)
  pp.pprint(client.delWareLabelWares(eval(args[0]),))

elif cmd == 'getWareLabelWaresCount':
  if len(args) != 1:
    print('getWareLabelWaresCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelWaresCount(eval(args[0]),))

elif cmd == 'getWareLabelWaresList':
  if len(args) != 1:
    print('getWareLabelWaresList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getWareLabelWaresList(eval(args[0]),))

elif cmd == 'addPresent':
  if len(args) != 1:
    print('addPresent requires 1 args')
    sys.exit(1)
  pp.pprint(client.addPresent(eval(args[0]),))

elif cmd == 'delPresent':
  if len(args) != 1:
    print('delPresent requires 1 args')
    sys.exit(1)
  pp.pprint(client.delPresent(eval(args[0]),))

elif cmd == 'getPresentList':
  if len(args) != 1:
    print('getPresentList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getPresentList(eval(args[0]),))

elif cmd == 'addStep':
  if len(args) != 1:
    print('addStep requires 1 args')
    sys.exit(1)
  pp.pprint(client.addStep(eval(args[0]),))

elif cmd == 'delStep':
  if len(args) != 1:
    print('delStep requires 1 args')
    sys.exit(1)
  pp.pprint(client.delStep(eval(args[0]),))

elif cmd == 'getStepList':
  if len(args) != 1:
    print('getStepList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getStepList(eval(args[0]),))

elif cmd == 'createOnsaleGroup':
  if len(args) != 1:
    print('createOnsaleGroup requires 1 args')
    sys.exit(1)
  pp.pprint(client.createOnsaleGroup(eval(args[0]),))

elif cmd == 'updateOnsaleGroup':
  if len(args) != 1:
    print('updateOnsaleGroup requires 1 args')
    sys.exit(1)
  pp.pprint(client.updateOnsaleGroup(eval(args[0]),))

elif cmd == 'getOnsaleGroupCount':
  if len(args) != 1:
    print('getOnsaleGroupCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.getOnsaleGroupCount(eval(args[0]),))

elif cmd == 'getOnsaleGroupList':
  if len(args) != 1:
    print('getOnsaleGroupList requires 1 args')
    sys.exit(1)
  pp.pprint(client.getOnsaleGroupList(eval(args[0]),))

elif cmd == 'offline':
  if len(args) != 1:
    print('offline requires 1 args')
    sys.exit(1)
  pp.pprint(client.offline(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
