// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

namespace odb
{
  // onsale_warelabel
  //

  inline
  access::object_traits< ::onsale_warelabel >::id_type
  access::object_traits< ::onsale_warelabel >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::onsale_warelabel >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::onsale_warelabel >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_warelabel_stat
  //

  inline
  void access::view_traits< ::onsale_warelabel_stat >::
  callback (database& db, view_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_warelabelwares
  //

  inline
  access::object_traits< ::onsale_warelabelwares >::id_type
  access::object_traits< ::onsale_warelabelwares >::
  id (const object_type&)
  {
  }

  inline
  void access::object_traits< ::onsale_warelabelwares >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::onsale_warelabelwares >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_warelabelwares_stat
  //

  inline
  void access::view_traits< ::onsale_warelabelwares_stat >::
  callback (database& db, view_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_present
  //

  inline
  access::object_traits< ::onsale_present >::id_type
  access::object_traits< ::onsale_present >::
  id (const object_type&)
  {
  }

  inline
  void access::object_traits< ::onsale_present >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::onsale_present >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_present_stat
  //

  inline
  void access::view_traits< ::onsale_present_stat >::
  callback (database& db, view_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_step
  //

  inline
  access::object_traits< ::onsale_step >::id_type
  access::object_traits< ::onsale_step >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::onsale_step >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::onsale_step >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_step_stat
  //

  inline
  void access::view_traits< ::onsale_step_stat >::
  callback (database& db, view_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_onsalegroup
  //

  inline
  access::object_traits< ::onsale_onsalegroup >::id_type
  access::object_traits< ::onsale_onsalegroup >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::onsale_onsalegroup >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::onsale_onsalegroup >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // onsale_onsalegroup_stat
  //

  inline
  void access::view_traits< ::onsale_onsalegroup_stat >::
  callback (database& db, view_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }
}

namespace odb
{
  // onsale_warelabel
  //

  inline
  void access::object_traits_impl< ::onsale_warelabel, id_mysql >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::onsale_warelabel, id_mysql >::
  load_ (statements_type& sts,
         object_type& obj,
         bool)
  {
    ODB_POTENTIALLY_UNUSED (sts);
    ODB_POTENTIALLY_UNUSED (obj);
  }

  // onsale_warelabel_stat
  //

  // onsale_warelabelwares
  //

  // onsale_warelabelwares_stat
  //

  // onsale_present
  //

  // onsale_present_stat
  //

  // onsale_step
  //

  inline
  void access::object_traits_impl< ::onsale_step, id_mysql >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::onsale_step, id_mysql >::
  load_ (statements_type& sts,
         object_type& obj,
         bool)
  {
    ODB_POTENTIALLY_UNUSED (sts);
    ODB_POTENTIALLY_UNUSED (obj);
  }

  // onsale_step_stat
  //

  // onsale_onsalegroup
  //

  inline
  void access::object_traits_impl< ::onsale_onsalegroup, id_mysql >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::onsale_onsalegroup, id_mysql >::
  load_ (statements_type& sts,
         object_type& obj,
         bool)
  {
    ODB_POTENTIALLY_UNUSED (sts);
    ODB_POTENTIALLY_UNUSED (obj);
  }

  // onsale_onsalegroup_stat
  //
}

