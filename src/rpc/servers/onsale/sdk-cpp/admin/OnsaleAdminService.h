/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef OnsaleAdminService_H
#define OnsaleAdminService_H

#include <thrift/TDispatchProcessor.h>
#include "onsaleAdmin_types.h"

namespace onsaleAdmin {

class OnsaleAdminServiceIf {
 public:
  virtual ~OnsaleAdminServiceIf() {}
  virtual void addCacheNameList(AddCacheNameListRsp& _return, const AddCacheNameListReq& addCacheNameListReq) = 0;
  virtual void delCacheNameList(DelCacheNameListRsp& _return, const DelCacheNameListReq& delCacheNameListReq) = 0;
  virtual void getCacheNameList(GetCacheNameListRsp& _return, const GetCacheNameListReq& getCacheNameListReq) = 0;
  virtual void checkCacheNameList(CheckCacheNameListRsp& _return, const CheckCacheNameListReq& checkCacheNameListReq) = 0;
  virtual void viewCheckCacheNameList(ViewCheckCacheNameListRsp& _return, const ViewCheckCacheNameListReq& viewCheckCacheNameListReq) = 0;
  virtual void getLatestTimestamp(LatestTimestampRsp& _return, const LatestTimestampReq& latestTimestampReq) = 0;
  virtual void createNameList(CreateNameListRsp& _return, const CreateNameListReq& createNameListReq) = 0;
  virtual void createWareLabel(CreateWareLabelRsp& _return, const CreateWareLabelReq& createWareLabelReq) = 0;
  virtual void updateWareLabel(UpdateWareLabelRsp& _return, const UpdateWareLabelReq& updateWareLabelReq) = 0;
  virtual void getWareLabelCount(WareLabelCountRsp& _return, const WareLabelCountReq& wareLabelCountReq) = 0;
  virtual void getWareLabelList(WareLabelListRsp& _return, const WareLabelListReq& wareLabelListReq) = 0;
  virtual void addWareLabelWares(AddWareLabelWaresRsp& _return, const AddWareLabelWaresReq& addWareLabelWaresReq) = 0;
  virtual void delWareLabelWares(DelWareLabelWaresRsp& _return, const DelWareLabelWaresReq& delWareLabelWaresReq) = 0;
  virtual void getWareLabelWaresCount(WareLabelWaresCountRsp& _return, const WareLabelWaresCountReq& wareLabelWaresCountReq) = 0;
  virtual void getWareLabelWaresList(WareLabelWaresListRsp& _return, const WareLabelWaresListReq& wareLabelWaresListReq) = 0;
  virtual void addPresent(AddPresentRsp& _return, const AddPresentReq& addPresentReq) = 0;
  virtual void delPresent(DelPresentRsp& _return, const DelPresentReq& delPresentReq) = 0;
  virtual void getPresentList(PresentListRsp& _return, const PresentListReq& presentListReq) = 0;
  virtual void addStep(AddStepRsp& _return, const AddStepReq& addStepReq) = 0;
  virtual void delStep(DelStepRsp& _return, const DelStepReq& delStepReq) = 0;
  virtual void getStepList(StepListRsp& _return, const StepListReq& stepListReq) = 0;
  virtual void createOnsaleGroup(CreateOnsaleGroupRsp& _return, const CreateOnsaleGroupReq& createOnsaleGroupReq) = 0;
  virtual void updateOnsaleGroup(UpdateOnsaleGroupRsp& _return, const UpdateOnsaleGroupReq& updateOnsaleGroupReq) = 0;
  virtual void getOnsaleGroupCount(OnsaleGroupCountRsp& _return, const OnsaleGroupCountReq& onsaleGroupCountReq) = 0;
  virtual void getOnsaleGroupList(OnsaleGroupListRsp& _return, const OnsaleGroupListReq& onsaleGroupListReq) = 0;
  virtual void offline(OfflineRsp& _return, const OfflineReq& offlineReq) = 0;
};

class OnsaleAdminServiceIfFactory {
 public:
  typedef OnsaleAdminServiceIf Handler;

  virtual ~OnsaleAdminServiceIfFactory() {}

  virtual OnsaleAdminServiceIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(OnsaleAdminServiceIf* /* handler */) = 0;
};

class OnsaleAdminServiceIfSingletonFactory : virtual public OnsaleAdminServiceIfFactory {
 public:
  OnsaleAdminServiceIfSingletonFactory(const boost::shared_ptr<OnsaleAdminServiceIf>& iface) : iface_(iface) {}
  virtual ~OnsaleAdminServiceIfSingletonFactory() {}

  virtual OnsaleAdminServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(OnsaleAdminServiceIf* /* handler */) {}

 protected:
  boost::shared_ptr<OnsaleAdminServiceIf> iface_;
};

class OnsaleAdminServiceNull : virtual public OnsaleAdminServiceIf {
 public:
  virtual ~OnsaleAdminServiceNull() {}
  void addCacheNameList(AddCacheNameListRsp& /* _return */, const AddCacheNameListReq& /* addCacheNameListReq */) {
    return;
  }
  void delCacheNameList(DelCacheNameListRsp& /* _return */, const DelCacheNameListReq& /* delCacheNameListReq */) {
    return;
  }
  void getCacheNameList(GetCacheNameListRsp& /* _return */, const GetCacheNameListReq& /* getCacheNameListReq */) {
    return;
  }
  void checkCacheNameList(CheckCacheNameListRsp& /* _return */, const CheckCacheNameListReq& /* checkCacheNameListReq */) {
    return;
  }
  void viewCheckCacheNameList(ViewCheckCacheNameListRsp& /* _return */, const ViewCheckCacheNameListReq& /* viewCheckCacheNameListReq */) {
    return;
  }
  void getLatestTimestamp(LatestTimestampRsp& /* _return */, const LatestTimestampReq& /* latestTimestampReq */) {
    return;
  }
  void createNameList(CreateNameListRsp& /* _return */, const CreateNameListReq& /* createNameListReq */) {
    return;
  }
  void createWareLabel(CreateWareLabelRsp& /* _return */, const CreateWareLabelReq& /* createWareLabelReq */) {
    return;
  }
  void updateWareLabel(UpdateWareLabelRsp& /* _return */, const UpdateWareLabelReq& /* updateWareLabelReq */) {
    return;
  }
  void getWareLabelCount(WareLabelCountRsp& /* _return */, const WareLabelCountReq& /* wareLabelCountReq */) {
    return;
  }
  void getWareLabelList(WareLabelListRsp& /* _return */, const WareLabelListReq& /* wareLabelListReq */) {
    return;
  }
  void addWareLabelWares(AddWareLabelWaresRsp& /* _return */, const AddWareLabelWaresReq& /* addWareLabelWaresReq */) {
    return;
  }
  void delWareLabelWares(DelWareLabelWaresRsp& /* _return */, const DelWareLabelWaresReq& /* delWareLabelWaresReq */) {
    return;
  }
  void getWareLabelWaresCount(WareLabelWaresCountRsp& /* _return */, const WareLabelWaresCountReq& /* wareLabelWaresCountReq */) {
    return;
  }
  void getWareLabelWaresList(WareLabelWaresListRsp& /* _return */, const WareLabelWaresListReq& /* wareLabelWaresListReq */) {
    return;
  }
  void addPresent(AddPresentRsp& /* _return */, const AddPresentReq& /* addPresentReq */) {
    return;
  }
  void delPresent(DelPresentRsp& /* _return */, const DelPresentReq& /* delPresentReq */) {
    return;
  }
  void getPresentList(PresentListRsp& /* _return */, const PresentListReq& /* presentListReq */) {
    return;
  }
  void addStep(AddStepRsp& /* _return */, const AddStepReq& /* addStepReq */) {
    return;
  }
  void delStep(DelStepRsp& /* _return */, const DelStepReq& /* delStepReq */) {
    return;
  }
  void getStepList(StepListRsp& /* _return */, const StepListReq& /* stepListReq */) {
    return;
  }
  void createOnsaleGroup(CreateOnsaleGroupRsp& /* _return */, const CreateOnsaleGroupReq& /* createOnsaleGroupReq */) {
    return;
  }
  void updateOnsaleGroup(UpdateOnsaleGroupRsp& /* _return */, const UpdateOnsaleGroupReq& /* updateOnsaleGroupReq */) {
    return;
  }
  void getOnsaleGroupCount(OnsaleGroupCountRsp& /* _return */, const OnsaleGroupCountReq& /* onsaleGroupCountReq */) {
    return;
  }
  void getOnsaleGroupList(OnsaleGroupListRsp& /* _return */, const OnsaleGroupListReq& /* onsaleGroupListReq */) {
    return;
  }
  void offline(OfflineRsp& /* _return */, const OfflineReq& /* offlineReq */) {
    return;
  }
};

typedef struct _OnsaleAdminService_addCacheNameList_args__isset {
  _OnsaleAdminService_addCacheNameList_args__isset() : addCacheNameListReq(false) {}
  bool addCacheNameListReq :1;
} _OnsaleAdminService_addCacheNameList_args__isset;

class OnsaleAdminService_addCacheNameList_args {
 public:

  static const char* ascii_fingerprint; // = "85935B893A94A9297BEAE9CB4B9E79AC";
  static const uint8_t binary_fingerprint[16]; // = {0x85,0x93,0x5B,0x89,0x3A,0x94,0xA9,0x29,0x7B,0xEA,0xE9,0xCB,0x4B,0x9E,0x79,0xAC};

  OnsaleAdminService_addCacheNameList_args(const OnsaleAdminService_addCacheNameList_args&);
  OnsaleAdminService_addCacheNameList_args& operator=(const OnsaleAdminService_addCacheNameList_args&);
  OnsaleAdminService_addCacheNameList_args() {
  }

  virtual ~OnsaleAdminService_addCacheNameList_args() throw();
  AddCacheNameListReq addCacheNameListReq;

  _OnsaleAdminService_addCacheNameList_args__isset __isset;

  void __set_addCacheNameListReq(const AddCacheNameListReq& val);

  bool operator == (const OnsaleAdminService_addCacheNameList_args & rhs) const
  {
    if (!(addCacheNameListReq == rhs.addCacheNameListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addCacheNameList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addCacheNameList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addCacheNameList_args& obj);
};


class OnsaleAdminService_addCacheNameList_pargs {
 public:

  static const char* ascii_fingerprint; // = "85935B893A94A9297BEAE9CB4B9E79AC";
  static const uint8_t binary_fingerprint[16]; // = {0x85,0x93,0x5B,0x89,0x3A,0x94,0xA9,0x29,0x7B,0xEA,0xE9,0xCB,0x4B,0x9E,0x79,0xAC};


  virtual ~OnsaleAdminService_addCacheNameList_pargs() throw();
  const AddCacheNameListReq* addCacheNameListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addCacheNameList_pargs& obj);
};

typedef struct _OnsaleAdminService_addCacheNameList_result__isset {
  _OnsaleAdminService_addCacheNameList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addCacheNameList_result__isset;

class OnsaleAdminService_addCacheNameList_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_addCacheNameList_result(const OnsaleAdminService_addCacheNameList_result&);
  OnsaleAdminService_addCacheNameList_result& operator=(const OnsaleAdminService_addCacheNameList_result&);
  OnsaleAdminService_addCacheNameList_result() {
  }

  virtual ~OnsaleAdminService_addCacheNameList_result() throw();
  AddCacheNameListRsp success;

  _OnsaleAdminService_addCacheNameList_result__isset __isset;

  void __set_success(const AddCacheNameListRsp& val);

  bool operator == (const OnsaleAdminService_addCacheNameList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addCacheNameList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addCacheNameList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addCacheNameList_result& obj);
};

typedef struct _OnsaleAdminService_addCacheNameList_presult__isset {
  _OnsaleAdminService_addCacheNameList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addCacheNameList_presult__isset;

class OnsaleAdminService_addCacheNameList_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_addCacheNameList_presult() throw();
  AddCacheNameListRsp* success;

  _OnsaleAdminService_addCacheNameList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addCacheNameList_presult& obj);
};

typedef struct _OnsaleAdminService_delCacheNameList_args__isset {
  _OnsaleAdminService_delCacheNameList_args__isset() : delCacheNameListReq(false) {}
  bool delCacheNameListReq :1;
} _OnsaleAdminService_delCacheNameList_args__isset;

class OnsaleAdminService_delCacheNameList_args {
 public:

  static const char* ascii_fingerprint; // = "85935B893A94A9297BEAE9CB4B9E79AC";
  static const uint8_t binary_fingerprint[16]; // = {0x85,0x93,0x5B,0x89,0x3A,0x94,0xA9,0x29,0x7B,0xEA,0xE9,0xCB,0x4B,0x9E,0x79,0xAC};

  OnsaleAdminService_delCacheNameList_args(const OnsaleAdminService_delCacheNameList_args&);
  OnsaleAdminService_delCacheNameList_args& operator=(const OnsaleAdminService_delCacheNameList_args&);
  OnsaleAdminService_delCacheNameList_args() {
  }

  virtual ~OnsaleAdminService_delCacheNameList_args() throw();
  DelCacheNameListReq delCacheNameListReq;

  _OnsaleAdminService_delCacheNameList_args__isset __isset;

  void __set_delCacheNameListReq(const DelCacheNameListReq& val);

  bool operator == (const OnsaleAdminService_delCacheNameList_args & rhs) const
  {
    if (!(delCacheNameListReq == rhs.delCacheNameListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delCacheNameList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delCacheNameList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delCacheNameList_args& obj);
};


class OnsaleAdminService_delCacheNameList_pargs {
 public:

  static const char* ascii_fingerprint; // = "85935B893A94A9297BEAE9CB4B9E79AC";
  static const uint8_t binary_fingerprint[16]; // = {0x85,0x93,0x5B,0x89,0x3A,0x94,0xA9,0x29,0x7B,0xEA,0xE9,0xCB,0x4B,0x9E,0x79,0xAC};


  virtual ~OnsaleAdminService_delCacheNameList_pargs() throw();
  const DelCacheNameListReq* delCacheNameListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delCacheNameList_pargs& obj);
};

typedef struct _OnsaleAdminService_delCacheNameList_result__isset {
  _OnsaleAdminService_delCacheNameList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delCacheNameList_result__isset;

class OnsaleAdminService_delCacheNameList_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_delCacheNameList_result(const OnsaleAdminService_delCacheNameList_result&);
  OnsaleAdminService_delCacheNameList_result& operator=(const OnsaleAdminService_delCacheNameList_result&);
  OnsaleAdminService_delCacheNameList_result() {
  }

  virtual ~OnsaleAdminService_delCacheNameList_result() throw();
  DelCacheNameListRsp success;

  _OnsaleAdminService_delCacheNameList_result__isset __isset;

  void __set_success(const DelCacheNameListRsp& val);

  bool operator == (const OnsaleAdminService_delCacheNameList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delCacheNameList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delCacheNameList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delCacheNameList_result& obj);
};

typedef struct _OnsaleAdminService_delCacheNameList_presult__isset {
  _OnsaleAdminService_delCacheNameList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delCacheNameList_presult__isset;

class OnsaleAdminService_delCacheNameList_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_delCacheNameList_presult() throw();
  DelCacheNameListRsp* success;

  _OnsaleAdminService_delCacheNameList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delCacheNameList_presult& obj);
};

typedef struct _OnsaleAdminService_getCacheNameList_args__isset {
  _OnsaleAdminService_getCacheNameList_args__isset() : getCacheNameListReq(false) {}
  bool getCacheNameListReq :1;
} _OnsaleAdminService_getCacheNameList_args__isset;

class OnsaleAdminService_getCacheNameList_args {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};

  OnsaleAdminService_getCacheNameList_args(const OnsaleAdminService_getCacheNameList_args&);
  OnsaleAdminService_getCacheNameList_args& operator=(const OnsaleAdminService_getCacheNameList_args&);
  OnsaleAdminService_getCacheNameList_args() {
  }

  virtual ~OnsaleAdminService_getCacheNameList_args() throw();
  GetCacheNameListReq getCacheNameListReq;

  _OnsaleAdminService_getCacheNameList_args__isset __isset;

  void __set_getCacheNameListReq(const GetCacheNameListReq& val);

  bool operator == (const OnsaleAdminService_getCacheNameList_args & rhs) const
  {
    if (!(getCacheNameListReq == rhs.getCacheNameListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getCacheNameList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getCacheNameList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getCacheNameList_args& obj);
};


class OnsaleAdminService_getCacheNameList_pargs {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};


  virtual ~OnsaleAdminService_getCacheNameList_pargs() throw();
  const GetCacheNameListReq* getCacheNameListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getCacheNameList_pargs& obj);
};

typedef struct _OnsaleAdminService_getCacheNameList_result__isset {
  _OnsaleAdminService_getCacheNameList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getCacheNameList_result__isset;

class OnsaleAdminService_getCacheNameList_result {
 public:

  static const char* ascii_fingerprint; // = "B564675A73A37584915863B8C4545AB5";
  static const uint8_t binary_fingerprint[16]; // = {0xB5,0x64,0x67,0x5A,0x73,0xA3,0x75,0x84,0x91,0x58,0x63,0xB8,0xC4,0x54,0x5A,0xB5};

  OnsaleAdminService_getCacheNameList_result(const OnsaleAdminService_getCacheNameList_result&);
  OnsaleAdminService_getCacheNameList_result& operator=(const OnsaleAdminService_getCacheNameList_result&);
  OnsaleAdminService_getCacheNameList_result() {
  }

  virtual ~OnsaleAdminService_getCacheNameList_result() throw();
  GetCacheNameListRsp success;

  _OnsaleAdminService_getCacheNameList_result__isset __isset;

  void __set_success(const GetCacheNameListRsp& val);

  bool operator == (const OnsaleAdminService_getCacheNameList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getCacheNameList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getCacheNameList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getCacheNameList_result& obj);
};

typedef struct _OnsaleAdminService_getCacheNameList_presult__isset {
  _OnsaleAdminService_getCacheNameList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getCacheNameList_presult__isset;

class OnsaleAdminService_getCacheNameList_presult {
 public:

  static const char* ascii_fingerprint; // = "B564675A73A37584915863B8C4545AB5";
  static const uint8_t binary_fingerprint[16]; // = {0xB5,0x64,0x67,0x5A,0x73,0xA3,0x75,0x84,0x91,0x58,0x63,0xB8,0xC4,0x54,0x5A,0xB5};


  virtual ~OnsaleAdminService_getCacheNameList_presult() throw();
  GetCacheNameListRsp* success;

  _OnsaleAdminService_getCacheNameList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getCacheNameList_presult& obj);
};

typedef struct _OnsaleAdminService_checkCacheNameList_args__isset {
  _OnsaleAdminService_checkCacheNameList_args__isset() : checkCacheNameListReq(false) {}
  bool checkCacheNameListReq :1;
} _OnsaleAdminService_checkCacheNameList_args__isset;

class OnsaleAdminService_checkCacheNameList_args {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};

  OnsaleAdminService_checkCacheNameList_args(const OnsaleAdminService_checkCacheNameList_args&);
  OnsaleAdminService_checkCacheNameList_args& operator=(const OnsaleAdminService_checkCacheNameList_args&);
  OnsaleAdminService_checkCacheNameList_args() {
  }

  virtual ~OnsaleAdminService_checkCacheNameList_args() throw();
  CheckCacheNameListReq checkCacheNameListReq;

  _OnsaleAdminService_checkCacheNameList_args__isset __isset;

  void __set_checkCacheNameListReq(const CheckCacheNameListReq& val);

  bool operator == (const OnsaleAdminService_checkCacheNameList_args & rhs) const
  {
    if (!(checkCacheNameListReq == rhs.checkCacheNameListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_checkCacheNameList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_checkCacheNameList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_checkCacheNameList_args& obj);
};


class OnsaleAdminService_checkCacheNameList_pargs {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};


  virtual ~OnsaleAdminService_checkCacheNameList_pargs() throw();
  const CheckCacheNameListReq* checkCacheNameListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_checkCacheNameList_pargs& obj);
};

typedef struct _OnsaleAdminService_checkCacheNameList_result__isset {
  _OnsaleAdminService_checkCacheNameList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_checkCacheNameList_result__isset;

class OnsaleAdminService_checkCacheNameList_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_checkCacheNameList_result(const OnsaleAdminService_checkCacheNameList_result&);
  OnsaleAdminService_checkCacheNameList_result& operator=(const OnsaleAdminService_checkCacheNameList_result&);
  OnsaleAdminService_checkCacheNameList_result() {
  }

  virtual ~OnsaleAdminService_checkCacheNameList_result() throw();
  CheckCacheNameListRsp success;

  _OnsaleAdminService_checkCacheNameList_result__isset __isset;

  void __set_success(const CheckCacheNameListRsp& val);

  bool operator == (const OnsaleAdminService_checkCacheNameList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_checkCacheNameList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_checkCacheNameList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_checkCacheNameList_result& obj);
};

typedef struct _OnsaleAdminService_checkCacheNameList_presult__isset {
  _OnsaleAdminService_checkCacheNameList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_checkCacheNameList_presult__isset;

class OnsaleAdminService_checkCacheNameList_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_checkCacheNameList_presult() throw();
  CheckCacheNameListRsp* success;

  _OnsaleAdminService_checkCacheNameList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_checkCacheNameList_presult& obj);
};

typedef struct _OnsaleAdminService_viewCheckCacheNameList_args__isset {
  _OnsaleAdminService_viewCheckCacheNameList_args__isset() : viewCheckCacheNameListReq(false) {}
  bool viewCheckCacheNameListReq :1;
} _OnsaleAdminService_viewCheckCacheNameList_args__isset;

class OnsaleAdminService_viewCheckCacheNameList_args {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};

  OnsaleAdminService_viewCheckCacheNameList_args(const OnsaleAdminService_viewCheckCacheNameList_args&);
  OnsaleAdminService_viewCheckCacheNameList_args& operator=(const OnsaleAdminService_viewCheckCacheNameList_args&);
  OnsaleAdminService_viewCheckCacheNameList_args() {
  }

  virtual ~OnsaleAdminService_viewCheckCacheNameList_args() throw();
  ViewCheckCacheNameListReq viewCheckCacheNameListReq;

  _OnsaleAdminService_viewCheckCacheNameList_args__isset __isset;

  void __set_viewCheckCacheNameListReq(const ViewCheckCacheNameListReq& val);

  bool operator == (const OnsaleAdminService_viewCheckCacheNameList_args & rhs) const
  {
    if (!(viewCheckCacheNameListReq == rhs.viewCheckCacheNameListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_viewCheckCacheNameList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_viewCheckCacheNameList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_viewCheckCacheNameList_args& obj);
};


class OnsaleAdminService_viewCheckCacheNameList_pargs {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};


  virtual ~OnsaleAdminService_viewCheckCacheNameList_pargs() throw();
  const ViewCheckCacheNameListReq* viewCheckCacheNameListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_viewCheckCacheNameList_pargs& obj);
};

typedef struct _OnsaleAdminService_viewCheckCacheNameList_result__isset {
  _OnsaleAdminService_viewCheckCacheNameList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_viewCheckCacheNameList_result__isset;

class OnsaleAdminService_viewCheckCacheNameList_result {
 public:

  static const char* ascii_fingerprint; // = "415E40705C6E209E289AEF576E993B16";
  static const uint8_t binary_fingerprint[16]; // = {0x41,0x5E,0x40,0x70,0x5C,0x6E,0x20,0x9E,0x28,0x9A,0xEF,0x57,0x6E,0x99,0x3B,0x16};

  OnsaleAdminService_viewCheckCacheNameList_result(const OnsaleAdminService_viewCheckCacheNameList_result&);
  OnsaleAdminService_viewCheckCacheNameList_result& operator=(const OnsaleAdminService_viewCheckCacheNameList_result&);
  OnsaleAdminService_viewCheckCacheNameList_result() {
  }

  virtual ~OnsaleAdminService_viewCheckCacheNameList_result() throw();
  ViewCheckCacheNameListRsp success;

  _OnsaleAdminService_viewCheckCacheNameList_result__isset __isset;

  void __set_success(const ViewCheckCacheNameListRsp& val);

  bool operator == (const OnsaleAdminService_viewCheckCacheNameList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_viewCheckCacheNameList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_viewCheckCacheNameList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_viewCheckCacheNameList_result& obj);
};

typedef struct _OnsaleAdminService_viewCheckCacheNameList_presult__isset {
  _OnsaleAdminService_viewCheckCacheNameList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_viewCheckCacheNameList_presult__isset;

class OnsaleAdminService_viewCheckCacheNameList_presult {
 public:

  static const char* ascii_fingerprint; // = "415E40705C6E209E289AEF576E993B16";
  static const uint8_t binary_fingerprint[16]; // = {0x41,0x5E,0x40,0x70,0x5C,0x6E,0x20,0x9E,0x28,0x9A,0xEF,0x57,0x6E,0x99,0x3B,0x16};


  virtual ~OnsaleAdminService_viewCheckCacheNameList_presult() throw();
  ViewCheckCacheNameListRsp* success;

  _OnsaleAdminService_viewCheckCacheNameList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_viewCheckCacheNameList_presult& obj);
};

typedef struct _OnsaleAdminService_getLatestTimestamp_args__isset {
  _OnsaleAdminService_getLatestTimestamp_args__isset() : latestTimestampReq(false) {}
  bool latestTimestampReq :1;
} _OnsaleAdminService_getLatestTimestamp_args__isset;

class OnsaleAdminService_getLatestTimestamp_args {
 public:

  static const char* ascii_fingerprint; // = "B3124E95D8111DAEB63649B04CEB6D5F";
  static const uint8_t binary_fingerprint[16]; // = {0xB3,0x12,0x4E,0x95,0xD8,0x11,0x1D,0xAE,0xB6,0x36,0x49,0xB0,0x4C,0xEB,0x6D,0x5F};

  OnsaleAdminService_getLatestTimestamp_args(const OnsaleAdminService_getLatestTimestamp_args&);
  OnsaleAdminService_getLatestTimestamp_args& operator=(const OnsaleAdminService_getLatestTimestamp_args&);
  OnsaleAdminService_getLatestTimestamp_args() {
  }

  virtual ~OnsaleAdminService_getLatestTimestamp_args() throw();
  LatestTimestampReq latestTimestampReq;

  _OnsaleAdminService_getLatestTimestamp_args__isset __isset;

  void __set_latestTimestampReq(const LatestTimestampReq& val);

  bool operator == (const OnsaleAdminService_getLatestTimestamp_args & rhs) const
  {
    if (!(latestTimestampReq == rhs.latestTimestampReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getLatestTimestamp_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getLatestTimestamp_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getLatestTimestamp_args& obj);
};


class OnsaleAdminService_getLatestTimestamp_pargs {
 public:

  static const char* ascii_fingerprint; // = "B3124E95D8111DAEB63649B04CEB6D5F";
  static const uint8_t binary_fingerprint[16]; // = {0xB3,0x12,0x4E,0x95,0xD8,0x11,0x1D,0xAE,0xB6,0x36,0x49,0xB0,0x4C,0xEB,0x6D,0x5F};


  virtual ~OnsaleAdminService_getLatestTimestamp_pargs() throw();
  const LatestTimestampReq* latestTimestampReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getLatestTimestamp_pargs& obj);
};

typedef struct _OnsaleAdminService_getLatestTimestamp_result__isset {
  _OnsaleAdminService_getLatestTimestamp_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getLatestTimestamp_result__isset;

class OnsaleAdminService_getLatestTimestamp_result {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};

  OnsaleAdminService_getLatestTimestamp_result(const OnsaleAdminService_getLatestTimestamp_result&);
  OnsaleAdminService_getLatestTimestamp_result& operator=(const OnsaleAdminService_getLatestTimestamp_result&);
  OnsaleAdminService_getLatestTimestamp_result() {
  }

  virtual ~OnsaleAdminService_getLatestTimestamp_result() throw();
  LatestTimestampRsp success;

  _OnsaleAdminService_getLatestTimestamp_result__isset __isset;

  void __set_success(const LatestTimestampRsp& val);

  bool operator == (const OnsaleAdminService_getLatestTimestamp_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getLatestTimestamp_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getLatestTimestamp_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getLatestTimestamp_result& obj);
};

typedef struct _OnsaleAdminService_getLatestTimestamp_presult__isset {
  _OnsaleAdminService_getLatestTimestamp_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getLatestTimestamp_presult__isset;

class OnsaleAdminService_getLatestTimestamp_presult {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};


  virtual ~OnsaleAdminService_getLatestTimestamp_presult() throw();
  LatestTimestampRsp* success;

  _OnsaleAdminService_getLatestTimestamp_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getLatestTimestamp_presult& obj);
};

typedef struct _OnsaleAdminService_createNameList_args__isset {
  _OnsaleAdminService_createNameList_args__isset() : createNameListReq(false) {}
  bool createNameListReq :1;
} _OnsaleAdminService_createNameList_args__isset;

class OnsaleAdminService_createNameList_args {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};

  OnsaleAdminService_createNameList_args(const OnsaleAdminService_createNameList_args&);
  OnsaleAdminService_createNameList_args& operator=(const OnsaleAdminService_createNameList_args&);
  OnsaleAdminService_createNameList_args() {
  }

  virtual ~OnsaleAdminService_createNameList_args() throw();
  CreateNameListReq createNameListReq;

  _OnsaleAdminService_createNameList_args__isset __isset;

  void __set_createNameListReq(const CreateNameListReq& val);

  bool operator == (const OnsaleAdminService_createNameList_args & rhs) const
  {
    if (!(createNameListReq == rhs.createNameListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_createNameList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_createNameList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createNameList_args& obj);
};


class OnsaleAdminService_createNameList_pargs {
 public:

  static const char* ascii_fingerprint; // = "749EB551DE2BD2D51D4F65982507FADD";
  static const uint8_t binary_fingerprint[16]; // = {0x74,0x9E,0xB5,0x51,0xDE,0x2B,0xD2,0xD5,0x1D,0x4F,0x65,0x98,0x25,0x07,0xFA,0xDD};


  virtual ~OnsaleAdminService_createNameList_pargs() throw();
  const CreateNameListReq* createNameListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createNameList_pargs& obj);
};

typedef struct _OnsaleAdminService_createNameList_result__isset {
  _OnsaleAdminService_createNameList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_createNameList_result__isset;

class OnsaleAdminService_createNameList_result {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};

  OnsaleAdminService_createNameList_result(const OnsaleAdminService_createNameList_result&);
  OnsaleAdminService_createNameList_result& operator=(const OnsaleAdminService_createNameList_result&);
  OnsaleAdminService_createNameList_result() {
  }

  virtual ~OnsaleAdminService_createNameList_result() throw();
  CreateNameListRsp success;

  _OnsaleAdminService_createNameList_result__isset __isset;

  void __set_success(const CreateNameListRsp& val);

  bool operator == (const OnsaleAdminService_createNameList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_createNameList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_createNameList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createNameList_result& obj);
};

typedef struct _OnsaleAdminService_createNameList_presult__isset {
  _OnsaleAdminService_createNameList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_createNameList_presult__isset;

class OnsaleAdminService_createNameList_presult {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};


  virtual ~OnsaleAdminService_createNameList_presult() throw();
  CreateNameListRsp* success;

  _OnsaleAdminService_createNameList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createNameList_presult& obj);
};

typedef struct _OnsaleAdminService_createWareLabel_args__isset {
  _OnsaleAdminService_createWareLabel_args__isset() : createWareLabelReq(false) {}
  bool createWareLabelReq :1;
} _OnsaleAdminService_createWareLabel_args__isset;

class OnsaleAdminService_createWareLabel_args {
 public:

  static const char* ascii_fingerprint; // = "0CA6C1BD6E9AF931DB6EFA752386FF16";
  static const uint8_t binary_fingerprint[16]; // = {0x0C,0xA6,0xC1,0xBD,0x6E,0x9A,0xF9,0x31,0xDB,0x6E,0xFA,0x75,0x23,0x86,0xFF,0x16};

  OnsaleAdminService_createWareLabel_args(const OnsaleAdminService_createWareLabel_args&);
  OnsaleAdminService_createWareLabel_args& operator=(const OnsaleAdminService_createWareLabel_args&);
  OnsaleAdminService_createWareLabel_args() {
  }

  virtual ~OnsaleAdminService_createWareLabel_args() throw();
  CreateWareLabelReq createWareLabelReq;

  _OnsaleAdminService_createWareLabel_args__isset __isset;

  void __set_createWareLabelReq(const CreateWareLabelReq& val);

  bool operator == (const OnsaleAdminService_createWareLabel_args & rhs) const
  {
    if (!(createWareLabelReq == rhs.createWareLabelReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_createWareLabel_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_createWareLabel_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createWareLabel_args& obj);
};


class OnsaleAdminService_createWareLabel_pargs {
 public:

  static const char* ascii_fingerprint; // = "0CA6C1BD6E9AF931DB6EFA752386FF16";
  static const uint8_t binary_fingerprint[16]; // = {0x0C,0xA6,0xC1,0xBD,0x6E,0x9A,0xF9,0x31,0xDB,0x6E,0xFA,0x75,0x23,0x86,0xFF,0x16};


  virtual ~OnsaleAdminService_createWareLabel_pargs() throw();
  const CreateWareLabelReq* createWareLabelReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createWareLabel_pargs& obj);
};

typedef struct _OnsaleAdminService_createWareLabel_result__isset {
  _OnsaleAdminService_createWareLabel_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_createWareLabel_result__isset;

class OnsaleAdminService_createWareLabel_result {
 public:

  static const char* ascii_fingerprint; // = "E0E771F9D3D512326560E8D34AF3FB5D";
  static const uint8_t binary_fingerprint[16]; // = {0xE0,0xE7,0x71,0xF9,0xD3,0xD5,0x12,0x32,0x65,0x60,0xE8,0xD3,0x4A,0xF3,0xFB,0x5D};

  OnsaleAdminService_createWareLabel_result(const OnsaleAdminService_createWareLabel_result&);
  OnsaleAdminService_createWareLabel_result& operator=(const OnsaleAdminService_createWareLabel_result&);
  OnsaleAdminService_createWareLabel_result() {
  }

  virtual ~OnsaleAdminService_createWareLabel_result() throw();
  CreateWareLabelRsp success;

  _OnsaleAdminService_createWareLabel_result__isset __isset;

  void __set_success(const CreateWareLabelRsp& val);

  bool operator == (const OnsaleAdminService_createWareLabel_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_createWareLabel_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_createWareLabel_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createWareLabel_result& obj);
};

typedef struct _OnsaleAdminService_createWareLabel_presult__isset {
  _OnsaleAdminService_createWareLabel_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_createWareLabel_presult__isset;

class OnsaleAdminService_createWareLabel_presult {
 public:

  static const char* ascii_fingerprint; // = "E0E771F9D3D512326560E8D34AF3FB5D";
  static const uint8_t binary_fingerprint[16]; // = {0xE0,0xE7,0x71,0xF9,0xD3,0xD5,0x12,0x32,0x65,0x60,0xE8,0xD3,0x4A,0xF3,0xFB,0x5D};


  virtual ~OnsaleAdminService_createWareLabel_presult() throw();
  CreateWareLabelRsp* success;

  _OnsaleAdminService_createWareLabel_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createWareLabel_presult& obj);
};

typedef struct _OnsaleAdminService_updateWareLabel_args__isset {
  _OnsaleAdminService_updateWareLabel_args__isset() : updateWareLabelReq(false) {}
  bool updateWareLabelReq :1;
} _OnsaleAdminService_updateWareLabel_args__isset;

class OnsaleAdminService_updateWareLabel_args {
 public:

  static const char* ascii_fingerprint; // = "5667C664F9F070D71CB74DA4F78AFC46";
  static const uint8_t binary_fingerprint[16]; // = {0x56,0x67,0xC6,0x64,0xF9,0xF0,0x70,0xD7,0x1C,0xB7,0x4D,0xA4,0xF7,0x8A,0xFC,0x46};

  OnsaleAdminService_updateWareLabel_args(const OnsaleAdminService_updateWareLabel_args&);
  OnsaleAdminService_updateWareLabel_args& operator=(const OnsaleAdminService_updateWareLabel_args&);
  OnsaleAdminService_updateWareLabel_args() {
  }

  virtual ~OnsaleAdminService_updateWareLabel_args() throw();
  UpdateWareLabelReq updateWareLabelReq;

  _OnsaleAdminService_updateWareLabel_args__isset __isset;

  void __set_updateWareLabelReq(const UpdateWareLabelReq& val);

  bool operator == (const OnsaleAdminService_updateWareLabel_args & rhs) const
  {
    if (!(updateWareLabelReq == rhs.updateWareLabelReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_updateWareLabel_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_updateWareLabel_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateWareLabel_args& obj);
};


class OnsaleAdminService_updateWareLabel_pargs {
 public:

  static const char* ascii_fingerprint; // = "5667C664F9F070D71CB74DA4F78AFC46";
  static const uint8_t binary_fingerprint[16]; // = {0x56,0x67,0xC6,0x64,0xF9,0xF0,0x70,0xD7,0x1C,0xB7,0x4D,0xA4,0xF7,0x8A,0xFC,0x46};


  virtual ~OnsaleAdminService_updateWareLabel_pargs() throw();
  const UpdateWareLabelReq* updateWareLabelReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateWareLabel_pargs& obj);
};

typedef struct _OnsaleAdminService_updateWareLabel_result__isset {
  _OnsaleAdminService_updateWareLabel_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_updateWareLabel_result__isset;

class OnsaleAdminService_updateWareLabel_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_updateWareLabel_result(const OnsaleAdminService_updateWareLabel_result&);
  OnsaleAdminService_updateWareLabel_result& operator=(const OnsaleAdminService_updateWareLabel_result&);
  OnsaleAdminService_updateWareLabel_result() {
  }

  virtual ~OnsaleAdminService_updateWareLabel_result() throw();
  UpdateWareLabelRsp success;

  _OnsaleAdminService_updateWareLabel_result__isset __isset;

  void __set_success(const UpdateWareLabelRsp& val);

  bool operator == (const OnsaleAdminService_updateWareLabel_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_updateWareLabel_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_updateWareLabel_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateWareLabel_result& obj);
};

typedef struct _OnsaleAdminService_updateWareLabel_presult__isset {
  _OnsaleAdminService_updateWareLabel_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_updateWareLabel_presult__isset;

class OnsaleAdminService_updateWareLabel_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_updateWareLabel_presult() throw();
  UpdateWareLabelRsp* success;

  _OnsaleAdminService_updateWareLabel_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateWareLabel_presult& obj);
};

typedef struct _OnsaleAdminService_getWareLabelCount_args__isset {
  _OnsaleAdminService_getWareLabelCount_args__isset() : wareLabelCountReq(false) {}
  bool wareLabelCountReq :1;
} _OnsaleAdminService_getWareLabelCount_args__isset;

class OnsaleAdminService_getWareLabelCount_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getWareLabelCount_args(const OnsaleAdminService_getWareLabelCount_args&);
  OnsaleAdminService_getWareLabelCount_args& operator=(const OnsaleAdminService_getWareLabelCount_args&);
  OnsaleAdminService_getWareLabelCount_args() {
  }

  virtual ~OnsaleAdminService_getWareLabelCount_args() throw();
  WareLabelCountReq wareLabelCountReq;

  _OnsaleAdminService_getWareLabelCount_args__isset __isset;

  void __set_wareLabelCountReq(const WareLabelCountReq& val);

  bool operator == (const OnsaleAdminService_getWareLabelCount_args & rhs) const
  {
    if (!(wareLabelCountReq == rhs.wareLabelCountReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelCount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelCount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelCount_args& obj);
};


class OnsaleAdminService_getWareLabelCount_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getWareLabelCount_pargs() throw();
  const WareLabelCountReq* wareLabelCountReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelCount_pargs& obj);
};

typedef struct _OnsaleAdminService_getWareLabelCount_result__isset {
  _OnsaleAdminService_getWareLabelCount_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelCount_result__isset;

class OnsaleAdminService_getWareLabelCount_result {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};

  OnsaleAdminService_getWareLabelCount_result(const OnsaleAdminService_getWareLabelCount_result&);
  OnsaleAdminService_getWareLabelCount_result& operator=(const OnsaleAdminService_getWareLabelCount_result&);
  OnsaleAdminService_getWareLabelCount_result() {
  }

  virtual ~OnsaleAdminService_getWareLabelCount_result() throw();
  WareLabelCountRsp success;

  _OnsaleAdminService_getWareLabelCount_result__isset __isset;

  void __set_success(const WareLabelCountRsp& val);

  bool operator == (const OnsaleAdminService_getWareLabelCount_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelCount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelCount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelCount_result& obj);
};

typedef struct _OnsaleAdminService_getWareLabelCount_presult__isset {
  _OnsaleAdminService_getWareLabelCount_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelCount_presult__isset;

class OnsaleAdminService_getWareLabelCount_presult {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};


  virtual ~OnsaleAdminService_getWareLabelCount_presult() throw();
  WareLabelCountRsp* success;

  _OnsaleAdminService_getWareLabelCount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelCount_presult& obj);
};

typedef struct _OnsaleAdminService_getWareLabelList_args__isset {
  _OnsaleAdminService_getWareLabelList_args__isset() : wareLabelListReq(false) {}
  bool wareLabelListReq :1;
} _OnsaleAdminService_getWareLabelList_args__isset;

class OnsaleAdminService_getWareLabelList_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getWareLabelList_args(const OnsaleAdminService_getWareLabelList_args&);
  OnsaleAdminService_getWareLabelList_args& operator=(const OnsaleAdminService_getWareLabelList_args&);
  OnsaleAdminService_getWareLabelList_args() {
  }

  virtual ~OnsaleAdminService_getWareLabelList_args() throw();
  WareLabelListReq wareLabelListReq;

  _OnsaleAdminService_getWareLabelList_args__isset __isset;

  void __set_wareLabelListReq(const WareLabelListReq& val);

  bool operator == (const OnsaleAdminService_getWareLabelList_args & rhs) const
  {
    if (!(wareLabelListReq == rhs.wareLabelListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelList_args& obj);
};


class OnsaleAdminService_getWareLabelList_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getWareLabelList_pargs() throw();
  const WareLabelListReq* wareLabelListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelList_pargs& obj);
};

typedef struct _OnsaleAdminService_getWareLabelList_result__isset {
  _OnsaleAdminService_getWareLabelList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelList_result__isset;

class OnsaleAdminService_getWareLabelList_result {
 public:

  static const char* ascii_fingerprint; // = "4A8B1476B68963D7D5DC9AFE0C76A84B";
  static const uint8_t binary_fingerprint[16]; // = {0x4A,0x8B,0x14,0x76,0xB6,0x89,0x63,0xD7,0xD5,0xDC,0x9A,0xFE,0x0C,0x76,0xA8,0x4B};

  OnsaleAdminService_getWareLabelList_result(const OnsaleAdminService_getWareLabelList_result&);
  OnsaleAdminService_getWareLabelList_result& operator=(const OnsaleAdminService_getWareLabelList_result&);
  OnsaleAdminService_getWareLabelList_result() {
  }

  virtual ~OnsaleAdminService_getWareLabelList_result() throw();
  WareLabelListRsp success;

  _OnsaleAdminService_getWareLabelList_result__isset __isset;

  void __set_success(const WareLabelListRsp& val);

  bool operator == (const OnsaleAdminService_getWareLabelList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelList_result& obj);
};

typedef struct _OnsaleAdminService_getWareLabelList_presult__isset {
  _OnsaleAdminService_getWareLabelList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelList_presult__isset;

class OnsaleAdminService_getWareLabelList_presult {
 public:

  static const char* ascii_fingerprint; // = "4A8B1476B68963D7D5DC9AFE0C76A84B";
  static const uint8_t binary_fingerprint[16]; // = {0x4A,0x8B,0x14,0x76,0xB6,0x89,0x63,0xD7,0xD5,0xDC,0x9A,0xFE,0x0C,0x76,0xA8,0x4B};


  virtual ~OnsaleAdminService_getWareLabelList_presult() throw();
  WareLabelListRsp* success;

  _OnsaleAdminService_getWareLabelList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelList_presult& obj);
};

typedef struct _OnsaleAdminService_addWareLabelWares_args__isset {
  _OnsaleAdminService_addWareLabelWares_args__isset() : addWareLabelWaresReq(false) {}
  bool addWareLabelWaresReq :1;
} _OnsaleAdminService_addWareLabelWares_args__isset;

class OnsaleAdminService_addWareLabelWares_args {
 public:

  static const char* ascii_fingerprint; // = "F53A266274E771DB62751906CCF8FA8F";
  static const uint8_t binary_fingerprint[16]; // = {0xF5,0x3A,0x26,0x62,0x74,0xE7,0x71,0xDB,0x62,0x75,0x19,0x06,0xCC,0xF8,0xFA,0x8F};

  OnsaleAdminService_addWareLabelWares_args(const OnsaleAdminService_addWareLabelWares_args&);
  OnsaleAdminService_addWareLabelWares_args& operator=(const OnsaleAdminService_addWareLabelWares_args&);
  OnsaleAdminService_addWareLabelWares_args() {
  }

  virtual ~OnsaleAdminService_addWareLabelWares_args() throw();
  AddWareLabelWaresReq addWareLabelWaresReq;

  _OnsaleAdminService_addWareLabelWares_args__isset __isset;

  void __set_addWareLabelWaresReq(const AddWareLabelWaresReq& val);

  bool operator == (const OnsaleAdminService_addWareLabelWares_args & rhs) const
  {
    if (!(addWareLabelWaresReq == rhs.addWareLabelWaresReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addWareLabelWares_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addWareLabelWares_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addWareLabelWares_args& obj);
};


class OnsaleAdminService_addWareLabelWares_pargs {
 public:

  static const char* ascii_fingerprint; // = "F53A266274E771DB62751906CCF8FA8F";
  static const uint8_t binary_fingerprint[16]; // = {0xF5,0x3A,0x26,0x62,0x74,0xE7,0x71,0xDB,0x62,0x75,0x19,0x06,0xCC,0xF8,0xFA,0x8F};


  virtual ~OnsaleAdminService_addWareLabelWares_pargs() throw();
  const AddWareLabelWaresReq* addWareLabelWaresReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addWareLabelWares_pargs& obj);
};

typedef struct _OnsaleAdminService_addWareLabelWares_result__isset {
  _OnsaleAdminService_addWareLabelWares_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addWareLabelWares_result__isset;

class OnsaleAdminService_addWareLabelWares_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_addWareLabelWares_result(const OnsaleAdminService_addWareLabelWares_result&);
  OnsaleAdminService_addWareLabelWares_result& operator=(const OnsaleAdminService_addWareLabelWares_result&);
  OnsaleAdminService_addWareLabelWares_result() {
  }

  virtual ~OnsaleAdminService_addWareLabelWares_result() throw();
  AddWareLabelWaresRsp success;

  _OnsaleAdminService_addWareLabelWares_result__isset __isset;

  void __set_success(const AddWareLabelWaresRsp& val);

  bool operator == (const OnsaleAdminService_addWareLabelWares_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addWareLabelWares_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addWareLabelWares_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addWareLabelWares_result& obj);
};

typedef struct _OnsaleAdminService_addWareLabelWares_presult__isset {
  _OnsaleAdminService_addWareLabelWares_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addWareLabelWares_presult__isset;

class OnsaleAdminService_addWareLabelWares_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_addWareLabelWares_presult() throw();
  AddWareLabelWaresRsp* success;

  _OnsaleAdminService_addWareLabelWares_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addWareLabelWares_presult& obj);
};

typedef struct _OnsaleAdminService_delWareLabelWares_args__isset {
  _OnsaleAdminService_delWareLabelWares_args__isset() : delWareLabelWaresReq(false) {}
  bool delWareLabelWaresReq :1;
} _OnsaleAdminService_delWareLabelWares_args__isset;

class OnsaleAdminService_delWareLabelWares_args {
 public:

  static const char* ascii_fingerprint; // = "F53A266274E771DB62751906CCF8FA8F";
  static const uint8_t binary_fingerprint[16]; // = {0xF5,0x3A,0x26,0x62,0x74,0xE7,0x71,0xDB,0x62,0x75,0x19,0x06,0xCC,0xF8,0xFA,0x8F};

  OnsaleAdminService_delWareLabelWares_args(const OnsaleAdminService_delWareLabelWares_args&);
  OnsaleAdminService_delWareLabelWares_args& operator=(const OnsaleAdminService_delWareLabelWares_args&);
  OnsaleAdminService_delWareLabelWares_args() {
  }

  virtual ~OnsaleAdminService_delWareLabelWares_args() throw();
  DelWareLabelWaresReq delWareLabelWaresReq;

  _OnsaleAdminService_delWareLabelWares_args__isset __isset;

  void __set_delWareLabelWaresReq(const DelWareLabelWaresReq& val);

  bool operator == (const OnsaleAdminService_delWareLabelWares_args & rhs) const
  {
    if (!(delWareLabelWaresReq == rhs.delWareLabelWaresReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delWareLabelWares_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delWareLabelWares_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delWareLabelWares_args& obj);
};


class OnsaleAdminService_delWareLabelWares_pargs {
 public:

  static const char* ascii_fingerprint; // = "F53A266274E771DB62751906CCF8FA8F";
  static const uint8_t binary_fingerprint[16]; // = {0xF5,0x3A,0x26,0x62,0x74,0xE7,0x71,0xDB,0x62,0x75,0x19,0x06,0xCC,0xF8,0xFA,0x8F};


  virtual ~OnsaleAdminService_delWareLabelWares_pargs() throw();
  const DelWareLabelWaresReq* delWareLabelWaresReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delWareLabelWares_pargs& obj);
};

typedef struct _OnsaleAdminService_delWareLabelWares_result__isset {
  _OnsaleAdminService_delWareLabelWares_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delWareLabelWares_result__isset;

class OnsaleAdminService_delWareLabelWares_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_delWareLabelWares_result(const OnsaleAdminService_delWareLabelWares_result&);
  OnsaleAdminService_delWareLabelWares_result& operator=(const OnsaleAdminService_delWareLabelWares_result&);
  OnsaleAdminService_delWareLabelWares_result() {
  }

  virtual ~OnsaleAdminService_delWareLabelWares_result() throw();
  DelWareLabelWaresRsp success;

  _OnsaleAdminService_delWareLabelWares_result__isset __isset;

  void __set_success(const DelWareLabelWaresRsp& val);

  bool operator == (const OnsaleAdminService_delWareLabelWares_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delWareLabelWares_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delWareLabelWares_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delWareLabelWares_result& obj);
};

typedef struct _OnsaleAdminService_delWareLabelWares_presult__isset {
  _OnsaleAdminService_delWareLabelWares_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delWareLabelWares_presult__isset;

class OnsaleAdminService_delWareLabelWares_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_delWareLabelWares_presult() throw();
  DelWareLabelWaresRsp* success;

  _OnsaleAdminService_delWareLabelWares_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delWareLabelWares_presult& obj);
};

typedef struct _OnsaleAdminService_getWareLabelWaresCount_args__isset {
  _OnsaleAdminService_getWareLabelWaresCount_args__isset() : wareLabelWaresCountReq(false) {}
  bool wareLabelWaresCountReq :1;
} _OnsaleAdminService_getWareLabelWaresCount_args__isset;

class OnsaleAdminService_getWareLabelWaresCount_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getWareLabelWaresCount_args(const OnsaleAdminService_getWareLabelWaresCount_args&);
  OnsaleAdminService_getWareLabelWaresCount_args& operator=(const OnsaleAdminService_getWareLabelWaresCount_args&);
  OnsaleAdminService_getWareLabelWaresCount_args() {
  }

  virtual ~OnsaleAdminService_getWareLabelWaresCount_args() throw();
  WareLabelWaresCountReq wareLabelWaresCountReq;

  _OnsaleAdminService_getWareLabelWaresCount_args__isset __isset;

  void __set_wareLabelWaresCountReq(const WareLabelWaresCountReq& val);

  bool operator == (const OnsaleAdminService_getWareLabelWaresCount_args & rhs) const
  {
    if (!(wareLabelWaresCountReq == rhs.wareLabelWaresCountReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelWaresCount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelWaresCount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresCount_args& obj);
};


class OnsaleAdminService_getWareLabelWaresCount_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getWareLabelWaresCount_pargs() throw();
  const WareLabelWaresCountReq* wareLabelWaresCountReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresCount_pargs& obj);
};

typedef struct _OnsaleAdminService_getWareLabelWaresCount_result__isset {
  _OnsaleAdminService_getWareLabelWaresCount_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelWaresCount_result__isset;

class OnsaleAdminService_getWareLabelWaresCount_result {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};

  OnsaleAdminService_getWareLabelWaresCount_result(const OnsaleAdminService_getWareLabelWaresCount_result&);
  OnsaleAdminService_getWareLabelWaresCount_result& operator=(const OnsaleAdminService_getWareLabelWaresCount_result&);
  OnsaleAdminService_getWareLabelWaresCount_result() {
  }

  virtual ~OnsaleAdminService_getWareLabelWaresCount_result() throw();
  WareLabelWaresCountRsp success;

  _OnsaleAdminService_getWareLabelWaresCount_result__isset __isset;

  void __set_success(const WareLabelWaresCountRsp& val);

  bool operator == (const OnsaleAdminService_getWareLabelWaresCount_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelWaresCount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelWaresCount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresCount_result& obj);
};

typedef struct _OnsaleAdminService_getWareLabelWaresCount_presult__isset {
  _OnsaleAdminService_getWareLabelWaresCount_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelWaresCount_presult__isset;

class OnsaleAdminService_getWareLabelWaresCount_presult {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};


  virtual ~OnsaleAdminService_getWareLabelWaresCount_presult() throw();
  WareLabelWaresCountRsp* success;

  _OnsaleAdminService_getWareLabelWaresCount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresCount_presult& obj);
};

typedef struct _OnsaleAdminService_getWareLabelWaresList_args__isset {
  _OnsaleAdminService_getWareLabelWaresList_args__isset() : wareLabelWaresListReq(false) {}
  bool wareLabelWaresListReq :1;
} _OnsaleAdminService_getWareLabelWaresList_args__isset;

class OnsaleAdminService_getWareLabelWaresList_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getWareLabelWaresList_args(const OnsaleAdminService_getWareLabelWaresList_args&);
  OnsaleAdminService_getWareLabelWaresList_args& operator=(const OnsaleAdminService_getWareLabelWaresList_args&);
  OnsaleAdminService_getWareLabelWaresList_args() {
  }

  virtual ~OnsaleAdminService_getWareLabelWaresList_args() throw();
  WareLabelWaresListReq wareLabelWaresListReq;

  _OnsaleAdminService_getWareLabelWaresList_args__isset __isset;

  void __set_wareLabelWaresListReq(const WareLabelWaresListReq& val);

  bool operator == (const OnsaleAdminService_getWareLabelWaresList_args & rhs) const
  {
    if (!(wareLabelWaresListReq == rhs.wareLabelWaresListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelWaresList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelWaresList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresList_args& obj);
};


class OnsaleAdminService_getWareLabelWaresList_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getWareLabelWaresList_pargs() throw();
  const WareLabelWaresListReq* wareLabelWaresListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresList_pargs& obj);
};

typedef struct _OnsaleAdminService_getWareLabelWaresList_result__isset {
  _OnsaleAdminService_getWareLabelWaresList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelWaresList_result__isset;

class OnsaleAdminService_getWareLabelWaresList_result {
 public:

  static const char* ascii_fingerprint; // = "5F8027107190202AFCABF5F8582ACA6D";
  static const uint8_t binary_fingerprint[16]; // = {0x5F,0x80,0x27,0x10,0x71,0x90,0x20,0x2A,0xFC,0xAB,0xF5,0xF8,0x58,0x2A,0xCA,0x6D};

  OnsaleAdminService_getWareLabelWaresList_result(const OnsaleAdminService_getWareLabelWaresList_result&);
  OnsaleAdminService_getWareLabelWaresList_result& operator=(const OnsaleAdminService_getWareLabelWaresList_result&);
  OnsaleAdminService_getWareLabelWaresList_result() {
  }

  virtual ~OnsaleAdminService_getWareLabelWaresList_result() throw();
  WareLabelWaresListRsp success;

  _OnsaleAdminService_getWareLabelWaresList_result__isset __isset;

  void __set_success(const WareLabelWaresListRsp& val);

  bool operator == (const OnsaleAdminService_getWareLabelWaresList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getWareLabelWaresList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getWareLabelWaresList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresList_result& obj);
};

typedef struct _OnsaleAdminService_getWareLabelWaresList_presult__isset {
  _OnsaleAdminService_getWareLabelWaresList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getWareLabelWaresList_presult__isset;

class OnsaleAdminService_getWareLabelWaresList_presult {
 public:

  static const char* ascii_fingerprint; // = "5F8027107190202AFCABF5F8582ACA6D";
  static const uint8_t binary_fingerprint[16]; // = {0x5F,0x80,0x27,0x10,0x71,0x90,0x20,0x2A,0xFC,0xAB,0xF5,0xF8,0x58,0x2A,0xCA,0x6D};


  virtual ~OnsaleAdminService_getWareLabelWaresList_presult() throw();
  WareLabelWaresListRsp* success;

  _OnsaleAdminService_getWareLabelWaresList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getWareLabelWaresList_presult& obj);
};

typedef struct _OnsaleAdminService_addPresent_args__isset {
  _OnsaleAdminService_addPresent_args__isset() : addPresentReq(false) {}
  bool addPresentReq :1;
} _OnsaleAdminService_addPresent_args__isset;

class OnsaleAdminService_addPresent_args {
 public:

  static const char* ascii_fingerprint; // = "3CA9F79E47C9C025FBD672311F10D077";
  static const uint8_t binary_fingerprint[16]; // = {0x3C,0xA9,0xF7,0x9E,0x47,0xC9,0xC0,0x25,0xFB,0xD6,0x72,0x31,0x1F,0x10,0xD0,0x77};

  OnsaleAdminService_addPresent_args(const OnsaleAdminService_addPresent_args&);
  OnsaleAdminService_addPresent_args& operator=(const OnsaleAdminService_addPresent_args&);
  OnsaleAdminService_addPresent_args() {
  }

  virtual ~OnsaleAdminService_addPresent_args() throw();
  AddPresentReq addPresentReq;

  _OnsaleAdminService_addPresent_args__isset __isset;

  void __set_addPresentReq(const AddPresentReq& val);

  bool operator == (const OnsaleAdminService_addPresent_args & rhs) const
  {
    if (!(addPresentReq == rhs.addPresentReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addPresent_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addPresent_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addPresent_args& obj);
};


class OnsaleAdminService_addPresent_pargs {
 public:

  static const char* ascii_fingerprint; // = "3CA9F79E47C9C025FBD672311F10D077";
  static const uint8_t binary_fingerprint[16]; // = {0x3C,0xA9,0xF7,0x9E,0x47,0xC9,0xC0,0x25,0xFB,0xD6,0x72,0x31,0x1F,0x10,0xD0,0x77};


  virtual ~OnsaleAdminService_addPresent_pargs() throw();
  const AddPresentReq* addPresentReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addPresent_pargs& obj);
};

typedef struct _OnsaleAdminService_addPresent_result__isset {
  _OnsaleAdminService_addPresent_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addPresent_result__isset;

class OnsaleAdminService_addPresent_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_addPresent_result(const OnsaleAdminService_addPresent_result&);
  OnsaleAdminService_addPresent_result& operator=(const OnsaleAdminService_addPresent_result&);
  OnsaleAdminService_addPresent_result() {
  }

  virtual ~OnsaleAdminService_addPresent_result() throw();
  AddPresentRsp success;

  _OnsaleAdminService_addPresent_result__isset __isset;

  void __set_success(const AddPresentRsp& val);

  bool operator == (const OnsaleAdminService_addPresent_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addPresent_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addPresent_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addPresent_result& obj);
};

typedef struct _OnsaleAdminService_addPresent_presult__isset {
  _OnsaleAdminService_addPresent_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addPresent_presult__isset;

class OnsaleAdminService_addPresent_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_addPresent_presult() throw();
  AddPresentRsp* success;

  _OnsaleAdminService_addPresent_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addPresent_presult& obj);
};

typedef struct _OnsaleAdminService_delPresent_args__isset {
  _OnsaleAdminService_delPresent_args__isset() : delPresentReq(false) {}
  bool delPresentReq :1;
} _OnsaleAdminService_delPresent_args__isset;

class OnsaleAdminService_delPresent_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_delPresent_args(const OnsaleAdminService_delPresent_args&);
  OnsaleAdminService_delPresent_args& operator=(const OnsaleAdminService_delPresent_args&);
  OnsaleAdminService_delPresent_args() {
  }

  virtual ~OnsaleAdminService_delPresent_args() throw();
  DelPresentReq delPresentReq;

  _OnsaleAdminService_delPresent_args__isset __isset;

  void __set_delPresentReq(const DelPresentReq& val);

  bool operator == (const OnsaleAdminService_delPresent_args & rhs) const
  {
    if (!(delPresentReq == rhs.delPresentReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delPresent_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delPresent_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delPresent_args& obj);
};


class OnsaleAdminService_delPresent_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_delPresent_pargs() throw();
  const DelPresentReq* delPresentReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delPresent_pargs& obj);
};

typedef struct _OnsaleAdminService_delPresent_result__isset {
  _OnsaleAdminService_delPresent_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delPresent_result__isset;

class OnsaleAdminService_delPresent_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_delPresent_result(const OnsaleAdminService_delPresent_result&);
  OnsaleAdminService_delPresent_result& operator=(const OnsaleAdminService_delPresent_result&);
  OnsaleAdminService_delPresent_result() {
  }

  virtual ~OnsaleAdminService_delPresent_result() throw();
  DelPresentRsp success;

  _OnsaleAdminService_delPresent_result__isset __isset;

  void __set_success(const DelPresentRsp& val);

  bool operator == (const OnsaleAdminService_delPresent_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delPresent_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delPresent_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delPresent_result& obj);
};

typedef struct _OnsaleAdminService_delPresent_presult__isset {
  _OnsaleAdminService_delPresent_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delPresent_presult__isset;

class OnsaleAdminService_delPresent_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_delPresent_presult() throw();
  DelPresentRsp* success;

  _OnsaleAdminService_delPresent_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delPresent_presult& obj);
};

typedef struct _OnsaleAdminService_getPresentList_args__isset {
  _OnsaleAdminService_getPresentList_args__isset() : presentListReq(false) {}
  bool presentListReq :1;
} _OnsaleAdminService_getPresentList_args__isset;

class OnsaleAdminService_getPresentList_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getPresentList_args(const OnsaleAdminService_getPresentList_args&);
  OnsaleAdminService_getPresentList_args& operator=(const OnsaleAdminService_getPresentList_args&);
  OnsaleAdminService_getPresentList_args() {
  }

  virtual ~OnsaleAdminService_getPresentList_args() throw();
  PresentListReq presentListReq;

  _OnsaleAdminService_getPresentList_args__isset __isset;

  void __set_presentListReq(const PresentListReq& val);

  bool operator == (const OnsaleAdminService_getPresentList_args & rhs) const
  {
    if (!(presentListReq == rhs.presentListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getPresentList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getPresentList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getPresentList_args& obj);
};


class OnsaleAdminService_getPresentList_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getPresentList_pargs() throw();
  const PresentListReq* presentListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getPresentList_pargs& obj);
};

typedef struct _OnsaleAdminService_getPresentList_result__isset {
  _OnsaleAdminService_getPresentList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getPresentList_result__isset;

class OnsaleAdminService_getPresentList_result {
 public:

  static const char* ascii_fingerprint; // = "29953BB3C736DCCF39B8B3F1829A68DD";
  static const uint8_t binary_fingerprint[16]; // = {0x29,0x95,0x3B,0xB3,0xC7,0x36,0xDC,0xCF,0x39,0xB8,0xB3,0xF1,0x82,0x9A,0x68,0xDD};

  OnsaleAdminService_getPresentList_result(const OnsaleAdminService_getPresentList_result&);
  OnsaleAdminService_getPresentList_result& operator=(const OnsaleAdminService_getPresentList_result&);
  OnsaleAdminService_getPresentList_result() {
  }

  virtual ~OnsaleAdminService_getPresentList_result() throw();
  PresentListRsp success;

  _OnsaleAdminService_getPresentList_result__isset __isset;

  void __set_success(const PresentListRsp& val);

  bool operator == (const OnsaleAdminService_getPresentList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getPresentList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getPresentList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getPresentList_result& obj);
};

typedef struct _OnsaleAdminService_getPresentList_presult__isset {
  _OnsaleAdminService_getPresentList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getPresentList_presult__isset;

class OnsaleAdminService_getPresentList_presult {
 public:

  static const char* ascii_fingerprint; // = "29953BB3C736DCCF39B8B3F1829A68DD";
  static const uint8_t binary_fingerprint[16]; // = {0x29,0x95,0x3B,0xB3,0xC7,0x36,0xDC,0xCF,0x39,0xB8,0xB3,0xF1,0x82,0x9A,0x68,0xDD};


  virtual ~OnsaleAdminService_getPresentList_presult() throw();
  PresentListRsp* success;

  _OnsaleAdminService_getPresentList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getPresentList_presult& obj);
};

typedef struct _OnsaleAdminService_addStep_args__isset {
  _OnsaleAdminService_addStep_args__isset() : addStepReq(false) {}
  bool addStepReq :1;
} _OnsaleAdminService_addStep_args__isset;

class OnsaleAdminService_addStep_args {
 public:

  static const char* ascii_fingerprint; // = "A896139FC11A42F58D55162B07D5A49F";
  static const uint8_t binary_fingerprint[16]; // = {0xA8,0x96,0x13,0x9F,0xC1,0x1A,0x42,0xF5,0x8D,0x55,0x16,0x2B,0x07,0xD5,0xA4,0x9F};

  OnsaleAdminService_addStep_args(const OnsaleAdminService_addStep_args&);
  OnsaleAdminService_addStep_args& operator=(const OnsaleAdminService_addStep_args&);
  OnsaleAdminService_addStep_args() {
  }

  virtual ~OnsaleAdminService_addStep_args() throw();
  AddStepReq addStepReq;

  _OnsaleAdminService_addStep_args__isset __isset;

  void __set_addStepReq(const AddStepReq& val);

  bool operator == (const OnsaleAdminService_addStep_args & rhs) const
  {
    if (!(addStepReq == rhs.addStepReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addStep_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addStep_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addStep_args& obj);
};


class OnsaleAdminService_addStep_pargs {
 public:

  static const char* ascii_fingerprint; // = "A896139FC11A42F58D55162B07D5A49F";
  static const uint8_t binary_fingerprint[16]; // = {0xA8,0x96,0x13,0x9F,0xC1,0x1A,0x42,0xF5,0x8D,0x55,0x16,0x2B,0x07,0xD5,0xA4,0x9F};


  virtual ~OnsaleAdminService_addStep_pargs() throw();
  const AddStepReq* addStepReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addStep_pargs& obj);
};

typedef struct _OnsaleAdminService_addStep_result__isset {
  _OnsaleAdminService_addStep_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addStep_result__isset;

class OnsaleAdminService_addStep_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_addStep_result(const OnsaleAdminService_addStep_result&);
  OnsaleAdminService_addStep_result& operator=(const OnsaleAdminService_addStep_result&);
  OnsaleAdminService_addStep_result() {
  }

  virtual ~OnsaleAdminService_addStep_result() throw();
  AddStepRsp success;

  _OnsaleAdminService_addStep_result__isset __isset;

  void __set_success(const AddStepRsp& val);

  bool operator == (const OnsaleAdminService_addStep_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_addStep_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_addStep_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addStep_result& obj);
};

typedef struct _OnsaleAdminService_addStep_presult__isset {
  _OnsaleAdminService_addStep_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_addStep_presult__isset;

class OnsaleAdminService_addStep_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_addStep_presult() throw();
  AddStepRsp* success;

  _OnsaleAdminService_addStep_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_addStep_presult& obj);
};

typedef struct _OnsaleAdminService_delStep_args__isset {
  _OnsaleAdminService_delStep_args__isset() : delStepReq(false) {}
  bool delStepReq :1;
} _OnsaleAdminService_delStep_args__isset;

class OnsaleAdminService_delStep_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_delStep_args(const OnsaleAdminService_delStep_args&);
  OnsaleAdminService_delStep_args& operator=(const OnsaleAdminService_delStep_args&);
  OnsaleAdminService_delStep_args() {
  }

  virtual ~OnsaleAdminService_delStep_args() throw();
  DelStepReq delStepReq;

  _OnsaleAdminService_delStep_args__isset __isset;

  void __set_delStepReq(const DelStepReq& val);

  bool operator == (const OnsaleAdminService_delStep_args & rhs) const
  {
    if (!(delStepReq == rhs.delStepReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delStep_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delStep_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delStep_args& obj);
};


class OnsaleAdminService_delStep_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_delStep_pargs() throw();
  const DelStepReq* delStepReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delStep_pargs& obj);
};

typedef struct _OnsaleAdminService_delStep_result__isset {
  _OnsaleAdminService_delStep_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delStep_result__isset;

class OnsaleAdminService_delStep_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_delStep_result(const OnsaleAdminService_delStep_result&);
  OnsaleAdminService_delStep_result& operator=(const OnsaleAdminService_delStep_result&);
  OnsaleAdminService_delStep_result() {
  }

  virtual ~OnsaleAdminService_delStep_result() throw();
  DelStepRsp success;

  _OnsaleAdminService_delStep_result__isset __isset;

  void __set_success(const DelStepRsp& val);

  bool operator == (const OnsaleAdminService_delStep_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_delStep_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_delStep_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delStep_result& obj);
};

typedef struct _OnsaleAdminService_delStep_presult__isset {
  _OnsaleAdminService_delStep_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_delStep_presult__isset;

class OnsaleAdminService_delStep_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_delStep_presult() throw();
  DelStepRsp* success;

  _OnsaleAdminService_delStep_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_delStep_presult& obj);
};

typedef struct _OnsaleAdminService_getStepList_args__isset {
  _OnsaleAdminService_getStepList_args__isset() : stepListReq(false) {}
  bool stepListReq :1;
} _OnsaleAdminService_getStepList_args__isset;

class OnsaleAdminService_getStepList_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getStepList_args(const OnsaleAdminService_getStepList_args&);
  OnsaleAdminService_getStepList_args& operator=(const OnsaleAdminService_getStepList_args&);
  OnsaleAdminService_getStepList_args() {
  }

  virtual ~OnsaleAdminService_getStepList_args() throw();
  StepListReq stepListReq;

  _OnsaleAdminService_getStepList_args__isset __isset;

  void __set_stepListReq(const StepListReq& val);

  bool operator == (const OnsaleAdminService_getStepList_args & rhs) const
  {
    if (!(stepListReq == rhs.stepListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getStepList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getStepList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getStepList_args& obj);
};


class OnsaleAdminService_getStepList_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getStepList_pargs() throw();
  const StepListReq* stepListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getStepList_pargs& obj);
};

typedef struct _OnsaleAdminService_getStepList_result__isset {
  _OnsaleAdminService_getStepList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getStepList_result__isset;

class OnsaleAdminService_getStepList_result {
 public:

  static const char* ascii_fingerprint; // = "B58009C151E27A0CEDEBEA6C1B54782B";
  static const uint8_t binary_fingerprint[16]; // = {0xB5,0x80,0x09,0xC1,0x51,0xE2,0x7A,0x0C,0xED,0xEB,0xEA,0x6C,0x1B,0x54,0x78,0x2B};

  OnsaleAdminService_getStepList_result(const OnsaleAdminService_getStepList_result&);
  OnsaleAdminService_getStepList_result& operator=(const OnsaleAdminService_getStepList_result&);
  OnsaleAdminService_getStepList_result() {
  }

  virtual ~OnsaleAdminService_getStepList_result() throw();
  StepListRsp success;

  _OnsaleAdminService_getStepList_result__isset __isset;

  void __set_success(const StepListRsp& val);

  bool operator == (const OnsaleAdminService_getStepList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getStepList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getStepList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getStepList_result& obj);
};

typedef struct _OnsaleAdminService_getStepList_presult__isset {
  _OnsaleAdminService_getStepList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getStepList_presult__isset;

class OnsaleAdminService_getStepList_presult {
 public:

  static const char* ascii_fingerprint; // = "B58009C151E27A0CEDEBEA6C1B54782B";
  static const uint8_t binary_fingerprint[16]; // = {0xB5,0x80,0x09,0xC1,0x51,0xE2,0x7A,0x0C,0xED,0xEB,0xEA,0x6C,0x1B,0x54,0x78,0x2B};


  virtual ~OnsaleAdminService_getStepList_presult() throw();
  StepListRsp* success;

  _OnsaleAdminService_getStepList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getStepList_presult& obj);
};

typedef struct _OnsaleAdminService_createOnsaleGroup_args__isset {
  _OnsaleAdminService_createOnsaleGroup_args__isset() : createOnsaleGroupReq(false) {}
  bool createOnsaleGroupReq :1;
} _OnsaleAdminService_createOnsaleGroup_args__isset;

class OnsaleAdminService_createOnsaleGroup_args {
 public:

  static const char* ascii_fingerprint; // = "79C4EED565135304E5FA750AA00F230B";
  static const uint8_t binary_fingerprint[16]; // = {0x79,0xC4,0xEE,0xD5,0x65,0x13,0x53,0x04,0xE5,0xFA,0x75,0x0A,0xA0,0x0F,0x23,0x0B};

  OnsaleAdminService_createOnsaleGroup_args(const OnsaleAdminService_createOnsaleGroup_args&);
  OnsaleAdminService_createOnsaleGroup_args& operator=(const OnsaleAdminService_createOnsaleGroup_args&);
  OnsaleAdminService_createOnsaleGroup_args() {
  }

  virtual ~OnsaleAdminService_createOnsaleGroup_args() throw();
  CreateOnsaleGroupReq createOnsaleGroupReq;

  _OnsaleAdminService_createOnsaleGroup_args__isset __isset;

  void __set_createOnsaleGroupReq(const CreateOnsaleGroupReq& val);

  bool operator == (const OnsaleAdminService_createOnsaleGroup_args & rhs) const
  {
    if (!(createOnsaleGroupReq == rhs.createOnsaleGroupReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_createOnsaleGroup_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_createOnsaleGroup_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createOnsaleGroup_args& obj);
};


class OnsaleAdminService_createOnsaleGroup_pargs {
 public:

  static const char* ascii_fingerprint; // = "79C4EED565135304E5FA750AA00F230B";
  static const uint8_t binary_fingerprint[16]; // = {0x79,0xC4,0xEE,0xD5,0x65,0x13,0x53,0x04,0xE5,0xFA,0x75,0x0A,0xA0,0x0F,0x23,0x0B};


  virtual ~OnsaleAdminService_createOnsaleGroup_pargs() throw();
  const CreateOnsaleGroupReq* createOnsaleGroupReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createOnsaleGroup_pargs& obj);
};

typedef struct _OnsaleAdminService_createOnsaleGroup_result__isset {
  _OnsaleAdminService_createOnsaleGroup_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_createOnsaleGroup_result__isset;

class OnsaleAdminService_createOnsaleGroup_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_createOnsaleGroup_result(const OnsaleAdminService_createOnsaleGroup_result&);
  OnsaleAdminService_createOnsaleGroup_result& operator=(const OnsaleAdminService_createOnsaleGroup_result&);
  OnsaleAdminService_createOnsaleGroup_result() {
  }

  virtual ~OnsaleAdminService_createOnsaleGroup_result() throw();
  CreateOnsaleGroupRsp success;

  _OnsaleAdminService_createOnsaleGroup_result__isset __isset;

  void __set_success(const CreateOnsaleGroupRsp& val);

  bool operator == (const OnsaleAdminService_createOnsaleGroup_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_createOnsaleGroup_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_createOnsaleGroup_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createOnsaleGroup_result& obj);
};

typedef struct _OnsaleAdminService_createOnsaleGroup_presult__isset {
  _OnsaleAdminService_createOnsaleGroup_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_createOnsaleGroup_presult__isset;

class OnsaleAdminService_createOnsaleGroup_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_createOnsaleGroup_presult() throw();
  CreateOnsaleGroupRsp* success;

  _OnsaleAdminService_createOnsaleGroup_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_createOnsaleGroup_presult& obj);
};

typedef struct _OnsaleAdminService_updateOnsaleGroup_args__isset {
  _OnsaleAdminService_updateOnsaleGroup_args__isset() : updateOnsaleGroupReq(false) {}
  bool updateOnsaleGroupReq :1;
} _OnsaleAdminService_updateOnsaleGroup_args__isset;

class OnsaleAdminService_updateOnsaleGroup_args {
 public:

  static const char* ascii_fingerprint; // = "79C4EED565135304E5FA750AA00F230B";
  static const uint8_t binary_fingerprint[16]; // = {0x79,0xC4,0xEE,0xD5,0x65,0x13,0x53,0x04,0xE5,0xFA,0x75,0x0A,0xA0,0x0F,0x23,0x0B};

  OnsaleAdminService_updateOnsaleGroup_args(const OnsaleAdminService_updateOnsaleGroup_args&);
  OnsaleAdminService_updateOnsaleGroup_args& operator=(const OnsaleAdminService_updateOnsaleGroup_args&);
  OnsaleAdminService_updateOnsaleGroup_args() {
  }

  virtual ~OnsaleAdminService_updateOnsaleGroup_args() throw();
  UpdateOnsaleGroupReq updateOnsaleGroupReq;

  _OnsaleAdminService_updateOnsaleGroup_args__isset __isset;

  void __set_updateOnsaleGroupReq(const UpdateOnsaleGroupReq& val);

  bool operator == (const OnsaleAdminService_updateOnsaleGroup_args & rhs) const
  {
    if (!(updateOnsaleGroupReq == rhs.updateOnsaleGroupReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_updateOnsaleGroup_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_updateOnsaleGroup_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateOnsaleGroup_args& obj);
};


class OnsaleAdminService_updateOnsaleGroup_pargs {
 public:

  static const char* ascii_fingerprint; // = "79C4EED565135304E5FA750AA00F230B";
  static const uint8_t binary_fingerprint[16]; // = {0x79,0xC4,0xEE,0xD5,0x65,0x13,0x53,0x04,0xE5,0xFA,0x75,0x0A,0xA0,0x0F,0x23,0x0B};


  virtual ~OnsaleAdminService_updateOnsaleGroup_pargs() throw();
  const UpdateOnsaleGroupReq* updateOnsaleGroupReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateOnsaleGroup_pargs& obj);
};

typedef struct _OnsaleAdminService_updateOnsaleGroup_result__isset {
  _OnsaleAdminService_updateOnsaleGroup_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_updateOnsaleGroup_result__isset;

class OnsaleAdminService_updateOnsaleGroup_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_updateOnsaleGroup_result(const OnsaleAdminService_updateOnsaleGroup_result&);
  OnsaleAdminService_updateOnsaleGroup_result& operator=(const OnsaleAdminService_updateOnsaleGroup_result&);
  OnsaleAdminService_updateOnsaleGroup_result() {
  }

  virtual ~OnsaleAdminService_updateOnsaleGroup_result() throw();
  UpdateOnsaleGroupRsp success;

  _OnsaleAdminService_updateOnsaleGroup_result__isset __isset;

  void __set_success(const UpdateOnsaleGroupRsp& val);

  bool operator == (const OnsaleAdminService_updateOnsaleGroup_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_updateOnsaleGroup_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_updateOnsaleGroup_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateOnsaleGroup_result& obj);
};

typedef struct _OnsaleAdminService_updateOnsaleGroup_presult__isset {
  _OnsaleAdminService_updateOnsaleGroup_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_updateOnsaleGroup_presult__isset;

class OnsaleAdminService_updateOnsaleGroup_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_updateOnsaleGroup_presult() throw();
  UpdateOnsaleGroupRsp* success;

  _OnsaleAdminService_updateOnsaleGroup_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_updateOnsaleGroup_presult& obj);
};

typedef struct _OnsaleAdminService_getOnsaleGroupCount_args__isset {
  _OnsaleAdminService_getOnsaleGroupCount_args__isset() : onsaleGroupCountReq(false) {}
  bool onsaleGroupCountReq :1;
} _OnsaleAdminService_getOnsaleGroupCount_args__isset;

class OnsaleAdminService_getOnsaleGroupCount_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getOnsaleGroupCount_args(const OnsaleAdminService_getOnsaleGroupCount_args&);
  OnsaleAdminService_getOnsaleGroupCount_args& operator=(const OnsaleAdminService_getOnsaleGroupCount_args&);
  OnsaleAdminService_getOnsaleGroupCount_args() {
  }

  virtual ~OnsaleAdminService_getOnsaleGroupCount_args() throw();
  OnsaleGroupCountReq onsaleGroupCountReq;

  _OnsaleAdminService_getOnsaleGroupCount_args__isset __isset;

  void __set_onsaleGroupCountReq(const OnsaleGroupCountReq& val);

  bool operator == (const OnsaleAdminService_getOnsaleGroupCount_args & rhs) const
  {
    if (!(onsaleGroupCountReq == rhs.onsaleGroupCountReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getOnsaleGroupCount_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getOnsaleGroupCount_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupCount_args& obj);
};


class OnsaleAdminService_getOnsaleGroupCount_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getOnsaleGroupCount_pargs() throw();
  const OnsaleGroupCountReq* onsaleGroupCountReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupCount_pargs& obj);
};

typedef struct _OnsaleAdminService_getOnsaleGroupCount_result__isset {
  _OnsaleAdminService_getOnsaleGroupCount_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getOnsaleGroupCount_result__isset;

class OnsaleAdminService_getOnsaleGroupCount_result {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};

  OnsaleAdminService_getOnsaleGroupCount_result(const OnsaleAdminService_getOnsaleGroupCount_result&);
  OnsaleAdminService_getOnsaleGroupCount_result& operator=(const OnsaleAdminService_getOnsaleGroupCount_result&);
  OnsaleAdminService_getOnsaleGroupCount_result() {
  }

  virtual ~OnsaleAdminService_getOnsaleGroupCount_result() throw();
  OnsaleGroupCountRsp success;

  _OnsaleAdminService_getOnsaleGroupCount_result__isset __isset;

  void __set_success(const OnsaleGroupCountRsp& val);

  bool operator == (const OnsaleAdminService_getOnsaleGroupCount_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getOnsaleGroupCount_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getOnsaleGroupCount_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupCount_result& obj);
};

typedef struct _OnsaleAdminService_getOnsaleGroupCount_presult__isset {
  _OnsaleAdminService_getOnsaleGroupCount_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getOnsaleGroupCount_presult__isset;

class OnsaleAdminService_getOnsaleGroupCount_presult {
 public:

  static const char* ascii_fingerprint; // = "9168C47E89352A8793B8284E5414A202";
  static const uint8_t binary_fingerprint[16]; // = {0x91,0x68,0xC4,0x7E,0x89,0x35,0x2A,0x87,0x93,0xB8,0x28,0x4E,0x54,0x14,0xA2,0x02};


  virtual ~OnsaleAdminService_getOnsaleGroupCount_presult() throw();
  OnsaleGroupCountRsp* success;

  _OnsaleAdminService_getOnsaleGroupCount_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupCount_presult& obj);
};

typedef struct _OnsaleAdminService_getOnsaleGroupList_args__isset {
  _OnsaleAdminService_getOnsaleGroupList_args__isset() : onsaleGroupListReq(false) {}
  bool onsaleGroupListReq :1;
} _OnsaleAdminService_getOnsaleGroupList_args__isset;

class OnsaleAdminService_getOnsaleGroupList_args {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};

  OnsaleAdminService_getOnsaleGroupList_args(const OnsaleAdminService_getOnsaleGroupList_args&);
  OnsaleAdminService_getOnsaleGroupList_args& operator=(const OnsaleAdminService_getOnsaleGroupList_args&);
  OnsaleAdminService_getOnsaleGroupList_args() {
  }

  virtual ~OnsaleAdminService_getOnsaleGroupList_args() throw();
  OnsaleGroupListReq onsaleGroupListReq;

  _OnsaleAdminService_getOnsaleGroupList_args__isset __isset;

  void __set_onsaleGroupListReq(const OnsaleGroupListReq& val);

  bool operator == (const OnsaleAdminService_getOnsaleGroupList_args & rhs) const
  {
    if (!(onsaleGroupListReq == rhs.onsaleGroupListReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getOnsaleGroupList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getOnsaleGroupList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupList_args& obj);
};


class OnsaleAdminService_getOnsaleGroupList_pargs {
 public:

  static const char* ascii_fingerprint; // = "39D4D791764C0ACCDB75A244FD9946C7";
  static const uint8_t binary_fingerprint[16]; // = {0x39,0xD4,0xD7,0x91,0x76,0x4C,0x0A,0xCC,0xDB,0x75,0xA2,0x44,0xFD,0x99,0x46,0xC7};


  virtual ~OnsaleAdminService_getOnsaleGroupList_pargs() throw();
  const OnsaleGroupListReq* onsaleGroupListReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupList_pargs& obj);
};

typedef struct _OnsaleAdminService_getOnsaleGroupList_result__isset {
  _OnsaleAdminService_getOnsaleGroupList_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getOnsaleGroupList_result__isset;

class OnsaleAdminService_getOnsaleGroupList_result {
 public:

  static const char* ascii_fingerprint; // = "190D59E6214DE151BB5A8890B6CCD98B";
  static const uint8_t binary_fingerprint[16]; // = {0x19,0x0D,0x59,0xE6,0x21,0x4D,0xE1,0x51,0xBB,0x5A,0x88,0x90,0xB6,0xCC,0xD9,0x8B};

  OnsaleAdminService_getOnsaleGroupList_result(const OnsaleAdminService_getOnsaleGroupList_result&);
  OnsaleAdminService_getOnsaleGroupList_result& operator=(const OnsaleAdminService_getOnsaleGroupList_result&);
  OnsaleAdminService_getOnsaleGroupList_result() {
  }

  virtual ~OnsaleAdminService_getOnsaleGroupList_result() throw();
  OnsaleGroupListRsp success;

  _OnsaleAdminService_getOnsaleGroupList_result__isset __isset;

  void __set_success(const OnsaleGroupListRsp& val);

  bool operator == (const OnsaleAdminService_getOnsaleGroupList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_getOnsaleGroupList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_getOnsaleGroupList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupList_result& obj);
};

typedef struct _OnsaleAdminService_getOnsaleGroupList_presult__isset {
  _OnsaleAdminService_getOnsaleGroupList_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_getOnsaleGroupList_presult__isset;

class OnsaleAdminService_getOnsaleGroupList_presult {
 public:

  static const char* ascii_fingerprint; // = "190D59E6214DE151BB5A8890B6CCD98B";
  static const uint8_t binary_fingerprint[16]; // = {0x19,0x0D,0x59,0xE6,0x21,0x4D,0xE1,0x51,0xBB,0x5A,0x88,0x90,0xB6,0xCC,0xD9,0x8B};


  virtual ~OnsaleAdminService_getOnsaleGroupList_presult() throw();
  OnsaleGroupListRsp* success;

  _OnsaleAdminService_getOnsaleGroupList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_getOnsaleGroupList_presult& obj);
};

typedef struct _OnsaleAdminService_offline_args__isset {
  _OnsaleAdminService_offline_args__isset() : offlineReq(false) {}
  bool offlineReq :1;
} _OnsaleAdminService_offline_args__isset;

class OnsaleAdminService_offline_args {
 public:

  static const char* ascii_fingerprint; // = "B3124E95D8111DAEB63649B04CEB6D5F";
  static const uint8_t binary_fingerprint[16]; // = {0xB3,0x12,0x4E,0x95,0xD8,0x11,0x1D,0xAE,0xB6,0x36,0x49,0xB0,0x4C,0xEB,0x6D,0x5F};

  OnsaleAdminService_offline_args(const OnsaleAdminService_offline_args&);
  OnsaleAdminService_offline_args& operator=(const OnsaleAdminService_offline_args&);
  OnsaleAdminService_offline_args() {
  }

  virtual ~OnsaleAdminService_offline_args() throw();
  OfflineReq offlineReq;

  _OnsaleAdminService_offline_args__isset __isset;

  void __set_offlineReq(const OfflineReq& val);

  bool operator == (const OnsaleAdminService_offline_args & rhs) const
  {
    if (!(offlineReq == rhs.offlineReq))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_offline_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_offline_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_offline_args& obj);
};


class OnsaleAdminService_offline_pargs {
 public:

  static const char* ascii_fingerprint; // = "B3124E95D8111DAEB63649B04CEB6D5F";
  static const uint8_t binary_fingerprint[16]; // = {0xB3,0x12,0x4E,0x95,0xD8,0x11,0x1D,0xAE,0xB6,0x36,0x49,0xB0,0x4C,0xEB,0x6D,0x5F};


  virtual ~OnsaleAdminService_offline_pargs() throw();
  const OfflineReq* offlineReq;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_offline_pargs& obj);
};

typedef struct _OnsaleAdminService_offline_result__isset {
  _OnsaleAdminService_offline_result__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_offline_result__isset;

class OnsaleAdminService_offline_result {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};

  OnsaleAdminService_offline_result(const OnsaleAdminService_offline_result&);
  OnsaleAdminService_offline_result& operator=(const OnsaleAdminService_offline_result&);
  OnsaleAdminService_offline_result() {
  }

  virtual ~OnsaleAdminService_offline_result() throw();
  OfflineRsp success;

  _OnsaleAdminService_offline_result__isset __isset;

  void __set_success(const OfflineRsp& val);

  bool operator == (const OnsaleAdminService_offline_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const OnsaleAdminService_offline_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OnsaleAdminService_offline_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_offline_result& obj);
};

typedef struct _OnsaleAdminService_offline_presult__isset {
  _OnsaleAdminService_offline_presult__isset() : success(false) {}
  bool success :1;
} _OnsaleAdminService_offline_presult__isset;

class OnsaleAdminService_offline_presult {
 public:

  static const char* ascii_fingerprint; // = "9C1BA839512A4F2BC86BC780CA8C3AD8";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x1B,0xA8,0x39,0x51,0x2A,0x4F,0x2B,0xC8,0x6B,0xC7,0x80,0xCA,0x8C,0x3A,0xD8};


  virtual ~OnsaleAdminService_offline_presult() throw();
  OfflineRsp* success;

  _OnsaleAdminService_offline_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const OnsaleAdminService_offline_presult& obj);
};

class OnsaleAdminServiceClient : virtual public OnsaleAdminServiceIf {
 public:
  OnsaleAdminServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  OnsaleAdminServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void addCacheNameList(AddCacheNameListRsp& _return, const AddCacheNameListReq& addCacheNameListReq);
  void send_addCacheNameList(const AddCacheNameListReq& addCacheNameListReq);
  void recv_addCacheNameList(AddCacheNameListRsp& _return);
  void delCacheNameList(DelCacheNameListRsp& _return, const DelCacheNameListReq& delCacheNameListReq);
  void send_delCacheNameList(const DelCacheNameListReq& delCacheNameListReq);
  void recv_delCacheNameList(DelCacheNameListRsp& _return);
  void getCacheNameList(GetCacheNameListRsp& _return, const GetCacheNameListReq& getCacheNameListReq);
  void send_getCacheNameList(const GetCacheNameListReq& getCacheNameListReq);
  void recv_getCacheNameList(GetCacheNameListRsp& _return);
  void checkCacheNameList(CheckCacheNameListRsp& _return, const CheckCacheNameListReq& checkCacheNameListReq);
  void send_checkCacheNameList(const CheckCacheNameListReq& checkCacheNameListReq);
  void recv_checkCacheNameList(CheckCacheNameListRsp& _return);
  void viewCheckCacheNameList(ViewCheckCacheNameListRsp& _return, const ViewCheckCacheNameListReq& viewCheckCacheNameListReq);
  void send_viewCheckCacheNameList(const ViewCheckCacheNameListReq& viewCheckCacheNameListReq);
  void recv_viewCheckCacheNameList(ViewCheckCacheNameListRsp& _return);
  void getLatestTimestamp(LatestTimestampRsp& _return, const LatestTimestampReq& latestTimestampReq);
  void send_getLatestTimestamp(const LatestTimestampReq& latestTimestampReq);
  void recv_getLatestTimestamp(LatestTimestampRsp& _return);
  void createNameList(CreateNameListRsp& _return, const CreateNameListReq& createNameListReq);
  void send_createNameList(const CreateNameListReq& createNameListReq);
  void recv_createNameList(CreateNameListRsp& _return);
  void createWareLabel(CreateWareLabelRsp& _return, const CreateWareLabelReq& createWareLabelReq);
  void send_createWareLabel(const CreateWareLabelReq& createWareLabelReq);
  void recv_createWareLabel(CreateWareLabelRsp& _return);
  void updateWareLabel(UpdateWareLabelRsp& _return, const UpdateWareLabelReq& updateWareLabelReq);
  void send_updateWareLabel(const UpdateWareLabelReq& updateWareLabelReq);
  void recv_updateWareLabel(UpdateWareLabelRsp& _return);
  void getWareLabelCount(WareLabelCountRsp& _return, const WareLabelCountReq& wareLabelCountReq);
  void send_getWareLabelCount(const WareLabelCountReq& wareLabelCountReq);
  void recv_getWareLabelCount(WareLabelCountRsp& _return);
  void getWareLabelList(WareLabelListRsp& _return, const WareLabelListReq& wareLabelListReq);
  void send_getWareLabelList(const WareLabelListReq& wareLabelListReq);
  void recv_getWareLabelList(WareLabelListRsp& _return);
  void addWareLabelWares(AddWareLabelWaresRsp& _return, const AddWareLabelWaresReq& addWareLabelWaresReq);
  void send_addWareLabelWares(const AddWareLabelWaresReq& addWareLabelWaresReq);
  void recv_addWareLabelWares(AddWareLabelWaresRsp& _return);
  void delWareLabelWares(DelWareLabelWaresRsp& _return, const DelWareLabelWaresReq& delWareLabelWaresReq);
  void send_delWareLabelWares(const DelWareLabelWaresReq& delWareLabelWaresReq);
  void recv_delWareLabelWares(DelWareLabelWaresRsp& _return);
  void getWareLabelWaresCount(WareLabelWaresCountRsp& _return, const WareLabelWaresCountReq& wareLabelWaresCountReq);
  void send_getWareLabelWaresCount(const WareLabelWaresCountReq& wareLabelWaresCountReq);
  void recv_getWareLabelWaresCount(WareLabelWaresCountRsp& _return);
  void getWareLabelWaresList(WareLabelWaresListRsp& _return, const WareLabelWaresListReq& wareLabelWaresListReq);
  void send_getWareLabelWaresList(const WareLabelWaresListReq& wareLabelWaresListReq);
  void recv_getWareLabelWaresList(WareLabelWaresListRsp& _return);
  void addPresent(AddPresentRsp& _return, const AddPresentReq& addPresentReq);
  void send_addPresent(const AddPresentReq& addPresentReq);
  void recv_addPresent(AddPresentRsp& _return);
  void delPresent(DelPresentRsp& _return, const DelPresentReq& delPresentReq);
  void send_delPresent(const DelPresentReq& delPresentReq);
  void recv_delPresent(DelPresentRsp& _return);
  void getPresentList(PresentListRsp& _return, const PresentListReq& presentListReq);
  void send_getPresentList(const PresentListReq& presentListReq);
  void recv_getPresentList(PresentListRsp& _return);
  void addStep(AddStepRsp& _return, const AddStepReq& addStepReq);
  void send_addStep(const AddStepReq& addStepReq);
  void recv_addStep(AddStepRsp& _return);
  void delStep(DelStepRsp& _return, const DelStepReq& delStepReq);
  void send_delStep(const DelStepReq& delStepReq);
  void recv_delStep(DelStepRsp& _return);
  void getStepList(StepListRsp& _return, const StepListReq& stepListReq);
  void send_getStepList(const StepListReq& stepListReq);
  void recv_getStepList(StepListRsp& _return);
  void createOnsaleGroup(CreateOnsaleGroupRsp& _return, const CreateOnsaleGroupReq& createOnsaleGroupReq);
  void send_createOnsaleGroup(const CreateOnsaleGroupReq& createOnsaleGroupReq);
  void recv_createOnsaleGroup(CreateOnsaleGroupRsp& _return);
  void updateOnsaleGroup(UpdateOnsaleGroupRsp& _return, const UpdateOnsaleGroupReq& updateOnsaleGroupReq);
  void send_updateOnsaleGroup(const UpdateOnsaleGroupReq& updateOnsaleGroupReq);
  void recv_updateOnsaleGroup(UpdateOnsaleGroupRsp& _return);
  void getOnsaleGroupCount(OnsaleGroupCountRsp& _return, const OnsaleGroupCountReq& onsaleGroupCountReq);
  void send_getOnsaleGroupCount(const OnsaleGroupCountReq& onsaleGroupCountReq);
  void recv_getOnsaleGroupCount(OnsaleGroupCountRsp& _return);
  void getOnsaleGroupList(OnsaleGroupListRsp& _return, const OnsaleGroupListReq& onsaleGroupListReq);
  void send_getOnsaleGroupList(const OnsaleGroupListReq& onsaleGroupListReq);
  void recv_getOnsaleGroupList(OnsaleGroupListRsp& _return);
  void offline(OfflineRsp& _return, const OfflineReq& offlineReq);
  void send_offline(const OfflineReq& offlineReq);
  void recv_offline(OfflineRsp& _return);
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class OnsaleAdminServiceProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<OnsaleAdminServiceIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (OnsaleAdminServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_addCacheNameList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_delCacheNameList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getCacheNameList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_checkCacheNameList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_viewCheckCacheNameList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getLatestTimestamp(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createNameList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createWareLabel(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateWareLabel(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getWareLabelCount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getWareLabelList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addWareLabelWares(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_delWareLabelWares(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getWareLabelWaresCount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getWareLabelWaresList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addPresent(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_delPresent(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getPresentList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addStep(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_delStep(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getStepList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createOnsaleGroup(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateOnsaleGroup(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getOnsaleGroupCount(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getOnsaleGroupList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_offline(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  OnsaleAdminServiceProcessor(boost::shared_ptr<OnsaleAdminServiceIf> iface) :
    iface_(iface) {
    processMap_["addCacheNameList"] = &OnsaleAdminServiceProcessor::process_addCacheNameList;
    processMap_["delCacheNameList"] = &OnsaleAdminServiceProcessor::process_delCacheNameList;
    processMap_["getCacheNameList"] = &OnsaleAdminServiceProcessor::process_getCacheNameList;
    processMap_["checkCacheNameList"] = &OnsaleAdminServiceProcessor::process_checkCacheNameList;
    processMap_["viewCheckCacheNameList"] = &OnsaleAdminServiceProcessor::process_viewCheckCacheNameList;
    processMap_["getLatestTimestamp"] = &OnsaleAdminServiceProcessor::process_getLatestTimestamp;
    processMap_["createNameList"] = &OnsaleAdminServiceProcessor::process_createNameList;
    processMap_["createWareLabel"] = &OnsaleAdminServiceProcessor::process_createWareLabel;
    processMap_["updateWareLabel"] = &OnsaleAdminServiceProcessor::process_updateWareLabel;
    processMap_["getWareLabelCount"] = &OnsaleAdminServiceProcessor::process_getWareLabelCount;
    processMap_["getWareLabelList"] = &OnsaleAdminServiceProcessor::process_getWareLabelList;
    processMap_["addWareLabelWares"] = &OnsaleAdminServiceProcessor::process_addWareLabelWares;
    processMap_["delWareLabelWares"] = &OnsaleAdminServiceProcessor::process_delWareLabelWares;
    processMap_["getWareLabelWaresCount"] = &OnsaleAdminServiceProcessor::process_getWareLabelWaresCount;
    processMap_["getWareLabelWaresList"] = &OnsaleAdminServiceProcessor::process_getWareLabelWaresList;
    processMap_["addPresent"] = &OnsaleAdminServiceProcessor::process_addPresent;
    processMap_["delPresent"] = &OnsaleAdminServiceProcessor::process_delPresent;
    processMap_["getPresentList"] = &OnsaleAdminServiceProcessor::process_getPresentList;
    processMap_["addStep"] = &OnsaleAdminServiceProcessor::process_addStep;
    processMap_["delStep"] = &OnsaleAdminServiceProcessor::process_delStep;
    processMap_["getStepList"] = &OnsaleAdminServiceProcessor::process_getStepList;
    processMap_["createOnsaleGroup"] = &OnsaleAdminServiceProcessor::process_createOnsaleGroup;
    processMap_["updateOnsaleGroup"] = &OnsaleAdminServiceProcessor::process_updateOnsaleGroup;
    processMap_["getOnsaleGroupCount"] = &OnsaleAdminServiceProcessor::process_getOnsaleGroupCount;
    processMap_["getOnsaleGroupList"] = &OnsaleAdminServiceProcessor::process_getOnsaleGroupList;
    processMap_["offline"] = &OnsaleAdminServiceProcessor::process_offline;
  }

  virtual ~OnsaleAdminServiceProcessor() {}
};

class OnsaleAdminServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  OnsaleAdminServiceProcessorFactory(const ::boost::shared_ptr< OnsaleAdminServiceIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< OnsaleAdminServiceIfFactory > handlerFactory_;
};

class OnsaleAdminServiceMultiface : virtual public OnsaleAdminServiceIf {
 public:
  OnsaleAdminServiceMultiface(std::vector<boost::shared_ptr<OnsaleAdminServiceIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~OnsaleAdminServiceMultiface() {}
 protected:
  std::vector<boost::shared_ptr<OnsaleAdminServiceIf> > ifaces_;
  OnsaleAdminServiceMultiface() {}
  void add(boost::shared_ptr<OnsaleAdminServiceIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void addCacheNameList(AddCacheNameListRsp& _return, const AddCacheNameListReq& addCacheNameListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addCacheNameList(_return, addCacheNameListReq);
    }
    ifaces_[i]->addCacheNameList(_return, addCacheNameListReq);
    return;
  }

  void delCacheNameList(DelCacheNameListRsp& _return, const DelCacheNameListReq& delCacheNameListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->delCacheNameList(_return, delCacheNameListReq);
    }
    ifaces_[i]->delCacheNameList(_return, delCacheNameListReq);
    return;
  }

  void getCacheNameList(GetCacheNameListRsp& _return, const GetCacheNameListReq& getCacheNameListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getCacheNameList(_return, getCacheNameListReq);
    }
    ifaces_[i]->getCacheNameList(_return, getCacheNameListReq);
    return;
  }

  void checkCacheNameList(CheckCacheNameListRsp& _return, const CheckCacheNameListReq& checkCacheNameListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->checkCacheNameList(_return, checkCacheNameListReq);
    }
    ifaces_[i]->checkCacheNameList(_return, checkCacheNameListReq);
    return;
  }

  void viewCheckCacheNameList(ViewCheckCacheNameListRsp& _return, const ViewCheckCacheNameListReq& viewCheckCacheNameListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->viewCheckCacheNameList(_return, viewCheckCacheNameListReq);
    }
    ifaces_[i]->viewCheckCacheNameList(_return, viewCheckCacheNameListReq);
    return;
  }

  void getLatestTimestamp(LatestTimestampRsp& _return, const LatestTimestampReq& latestTimestampReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getLatestTimestamp(_return, latestTimestampReq);
    }
    ifaces_[i]->getLatestTimestamp(_return, latestTimestampReq);
    return;
  }

  void createNameList(CreateNameListRsp& _return, const CreateNameListReq& createNameListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createNameList(_return, createNameListReq);
    }
    ifaces_[i]->createNameList(_return, createNameListReq);
    return;
  }

  void createWareLabel(CreateWareLabelRsp& _return, const CreateWareLabelReq& createWareLabelReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createWareLabel(_return, createWareLabelReq);
    }
    ifaces_[i]->createWareLabel(_return, createWareLabelReq);
    return;
  }

  void updateWareLabel(UpdateWareLabelRsp& _return, const UpdateWareLabelReq& updateWareLabelReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateWareLabel(_return, updateWareLabelReq);
    }
    ifaces_[i]->updateWareLabel(_return, updateWareLabelReq);
    return;
  }

  void getWareLabelCount(WareLabelCountRsp& _return, const WareLabelCountReq& wareLabelCountReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getWareLabelCount(_return, wareLabelCountReq);
    }
    ifaces_[i]->getWareLabelCount(_return, wareLabelCountReq);
    return;
  }

  void getWareLabelList(WareLabelListRsp& _return, const WareLabelListReq& wareLabelListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getWareLabelList(_return, wareLabelListReq);
    }
    ifaces_[i]->getWareLabelList(_return, wareLabelListReq);
    return;
  }

  void addWareLabelWares(AddWareLabelWaresRsp& _return, const AddWareLabelWaresReq& addWareLabelWaresReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addWareLabelWares(_return, addWareLabelWaresReq);
    }
    ifaces_[i]->addWareLabelWares(_return, addWareLabelWaresReq);
    return;
  }

  void delWareLabelWares(DelWareLabelWaresRsp& _return, const DelWareLabelWaresReq& delWareLabelWaresReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->delWareLabelWares(_return, delWareLabelWaresReq);
    }
    ifaces_[i]->delWareLabelWares(_return, delWareLabelWaresReq);
    return;
  }

  void getWareLabelWaresCount(WareLabelWaresCountRsp& _return, const WareLabelWaresCountReq& wareLabelWaresCountReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getWareLabelWaresCount(_return, wareLabelWaresCountReq);
    }
    ifaces_[i]->getWareLabelWaresCount(_return, wareLabelWaresCountReq);
    return;
  }

  void getWareLabelWaresList(WareLabelWaresListRsp& _return, const WareLabelWaresListReq& wareLabelWaresListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getWareLabelWaresList(_return, wareLabelWaresListReq);
    }
    ifaces_[i]->getWareLabelWaresList(_return, wareLabelWaresListReq);
    return;
  }

  void addPresent(AddPresentRsp& _return, const AddPresentReq& addPresentReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addPresent(_return, addPresentReq);
    }
    ifaces_[i]->addPresent(_return, addPresentReq);
    return;
  }

  void delPresent(DelPresentRsp& _return, const DelPresentReq& delPresentReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->delPresent(_return, delPresentReq);
    }
    ifaces_[i]->delPresent(_return, delPresentReq);
    return;
  }

  void getPresentList(PresentListRsp& _return, const PresentListReq& presentListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getPresentList(_return, presentListReq);
    }
    ifaces_[i]->getPresentList(_return, presentListReq);
    return;
  }

  void addStep(AddStepRsp& _return, const AddStepReq& addStepReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addStep(_return, addStepReq);
    }
    ifaces_[i]->addStep(_return, addStepReq);
    return;
  }

  void delStep(DelStepRsp& _return, const DelStepReq& delStepReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->delStep(_return, delStepReq);
    }
    ifaces_[i]->delStep(_return, delStepReq);
    return;
  }

  void getStepList(StepListRsp& _return, const StepListReq& stepListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getStepList(_return, stepListReq);
    }
    ifaces_[i]->getStepList(_return, stepListReq);
    return;
  }

  void createOnsaleGroup(CreateOnsaleGroupRsp& _return, const CreateOnsaleGroupReq& createOnsaleGroupReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createOnsaleGroup(_return, createOnsaleGroupReq);
    }
    ifaces_[i]->createOnsaleGroup(_return, createOnsaleGroupReq);
    return;
  }

  void updateOnsaleGroup(UpdateOnsaleGroupRsp& _return, const UpdateOnsaleGroupReq& updateOnsaleGroupReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateOnsaleGroup(_return, updateOnsaleGroupReq);
    }
    ifaces_[i]->updateOnsaleGroup(_return, updateOnsaleGroupReq);
    return;
  }

  void getOnsaleGroupCount(OnsaleGroupCountRsp& _return, const OnsaleGroupCountReq& onsaleGroupCountReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getOnsaleGroupCount(_return, onsaleGroupCountReq);
    }
    ifaces_[i]->getOnsaleGroupCount(_return, onsaleGroupCountReq);
    return;
  }

  void getOnsaleGroupList(OnsaleGroupListRsp& _return, const OnsaleGroupListReq& onsaleGroupListReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getOnsaleGroupList(_return, onsaleGroupListReq);
    }
    ifaces_[i]->getOnsaleGroupList(_return, onsaleGroupListReq);
    return;
  }

  void offline(OfflineRsp& _return, const OfflineReq& offlineReq) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->offline(_return, offlineReq);
    }
    ifaces_[i]->offline(_return, offlineReq);
    return;
  }

};

} // namespace

#endif
